diff --git a/sql/anon.sql b/sql/anon.sql
index 0cdc769..f6cc950 100644
--- a/sql/anon.sql
+++ b/sql/anon.sql
@@ -1141,3 +1141,8 @@ $$
 -- TODO : https://en.wikipedia.org/wiki/L-diversity
 
 -- TODO : https://en.wikipedia.org/wiki/T-closeness
+
+-- NEON Patches
+
+GRANT ALL ON SCHEMA anon to neon_superuser;
+GRANT ALL ON ALL TABLES IN SCHEMA anon TO neon_superuser;
diff --git a/sql/init.sql b/sql/init.sql
index 7da6553..e8a5b60 100644
--- a/sql/init.sql
+++ b/sql/init.sql
@@ -74,6 +74,49 @@ $$
 
 SECURITY LABEL FOR anon ON FUNCTION anon.load_csv IS 'UNTRUSTED';
 
+CREATE OR REPLACE FUNCTION anon.load_csv_superuser(
+  datapath TEXT
+)
+RETURNS BOOLEAN
+AS $$
+DECLARE
+  success BOOLEAN;
+  sharedir TEXT;
+BEGIN
+  -- find the local extension directory
+  SELECT setting INTO sharedir
+  FROM pg_catalog.pg_config
+  WHERE name = 'SHAREDIR';
+
+  SELECT bool_or(results) INTO success
+  FROM unnest(array[
+    anon.load_csv('anon.identifiers_category',sharedir || datapath || '/identifiers_category.csv'),
+    anon.load_csv('anon.identifier',sharedir || datapath || '/identifier.csv'),
+    anon.load_csv('anon.address',sharedir || datapath || '/address.csv'),
+    anon.load_csv('anon.city',sharedir || datapath || '/city.csv'),
+    anon.load_csv('anon.company',sharedir || datapath || '/company.csv'),
+    anon.load_csv('anon.country',sharedir || datapath || '/country.csv'),
+    anon.load_csv('anon.email', sharedir || datapath || '/email.csv'),
+    anon.load_csv('anon.first_name',sharedir || datapath || '/first_name.csv'),
+    anon.load_csv('anon.iban',sharedir || datapath || '/iban.csv'),
+    anon.load_csv('anon.last_name',sharedir || datapath || '/last_name.csv'),
+    anon.load_csv('anon.postcode',sharedir || datapath || '/postcode.csv'),
+    anon.load_csv('anon.siret',sharedir || datapath || '/siret.csv'),
+    anon.load_csv('anon.lorem_ipsum',sharedir || datapath || '/lorem_ipsum.csv')
+  ]) results;
+  RETURN success;
+END;
+$$
+  LANGUAGE plpgsql
+  VOLATILE
+  RETURNS NULL ON NULL INPUT
+  PARALLEL UNSAFE -- because of the EXCEPTION
+  SECURITY DEFINER
+  SET search_path=''
+;
+
+SECURITY LABEL FOR anon ON FUNCTION anon.load_csv_superuser IS 'UNTRUSTED';
+
 -- load fake data from a given path
 CREATE OR REPLACE FUNCTION anon.init(
   datapath TEXT
@@ -90,23 +133,7 @@ BEGIN
     RETURN TRUE;
   END IF;
 
-  SELECT bool_or(results) INTO success
-  FROM unnest(array[
-    anon.load_csv('anon.identifiers_category',datapath||'/identifiers_category.csv'),
-    anon.load_csv('anon.identifier',datapath ||'/identifier.csv'),
-    anon.load_csv('anon.address',datapath ||'/address.csv'),
-    anon.load_csv('anon.city',datapath ||'/city.csv'),
-    anon.load_csv('anon.company',datapath ||'/company.csv'),
-    anon.load_csv('anon.country',datapath ||'/country.csv'),
-    anon.load_csv('anon.email', datapath ||'/email.csv'),
-    anon.load_csv('anon.first_name',datapath ||'/first_name.csv'),
-    anon.load_csv('anon.iban',datapath ||'/iban.csv'),
-    anon.load_csv('anon.last_name',datapath ||'/last_name.csv'),
-    anon.load_csv('anon.postcode',datapath ||'/postcode.csv'),
-    anon.load_csv('anon.siret',datapath ||'/siret.csv'),
-    anon.load_csv('anon.lorem_ipsum',datapath ||'/lorem_ipsum.csv')
-  ]) results;
-  RETURN success;
+  RETURN anon.load_csv_superuser(datapath);
 
 END;
 $$
@@ -159,14 +186,7 @@ SECURITY LABEL FOR anon ON FUNCTION anon.load(TEXT) IS 'UNTRUSTED';
 CREATE OR REPLACE FUNCTION anon.init()
 RETURNS BOOLEAN
 AS $$
-  WITH conf AS (
-        -- find the local extension directory
-        SELECT setting AS sharedir
-        FROM pg_catalog.pg_config
-        WHERE name = 'SHAREDIR'
-    )
-  SELECT anon.init(conf.sharedir || '/extension/anon/')
-  FROM conf;
+  SELECT anon.init('/extension/anon/'::TEXT)
 $$
   LANGUAGE SQL
   VOLATILE
@@ -264,3 +284,53 @@ $$
 ;
 
 SECURITY LABEL FOR anon ON FUNCTION anon.unload IS 'UNTRUSTED';
+
+
+CREATE OR REPLACE FUNCTION anon.toggle_transparent_masking_superuser(
+  dbname TEXT,
+  toggle BOOLEAN DEFAULT TRUE
+)
+RETURNS VOID AS
+$$
+BEGIN
+  EXECUTE format('ALTER DATABASE %I SET anon.transparent_dynamic_masking TO %s', dbname, toggle::TEXT);
+END;
+$$
+  LANGUAGE plpgsql
+  VOLATILE
+  SECURITY DEFINER
+  SET search_path=''
+;
+
+SECURITY LABEL FOR anon ON FUNCTION anon.toggle_transparent_masking_superuser IS 'UNTRUSTED';
+
+
+CREATE OR REPLACE FUNCTION anon.add_to_session_preload_libraries(
+  dbname TEXT
+)
+RETURNS VOID AS
+$$
+DECLARE
+  current_libs TEXT;
+BEGIN
+
+  SELECT setting INTO current_libs
+  FROM pg_catalog.pg_settings
+  WHERE name = 'session_preload_libraries';
+
+  IF current_libs IS NULL OR current_libs = '' THEN
+    EXECUTE format('ALTER DATABASE %I SET session_preload_libraries TO ''anon''', dbname);
+  ELSIF position('anon' in current_libs) = 0 THEN
+    EXECUTE format('ALTER DATABASE %I SET session_preload_libraries TO %L', 
+                   dbname, 
+                   current_libs || ',' || 'anon');
+  END IF;
+END;
+$$
+  LANGUAGE plpgsql
+  VOLATILE
+  SECURITY DEFINER
+  SET search_path=''
+;
+
+SECURITY LABEL FOR anon ON FUNCTION anon.add_to_session_preload_libraries IS 'UNTRUSTED';
