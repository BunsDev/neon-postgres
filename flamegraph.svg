<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="614" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="597.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="597.00"> </text><svg id="frames" x="10" width="1180" total_samples="105389"><g><title>libsystem_c.dylib`DYLD-STUB$$mkostemps (17 samples, 0.02%)</title><rect x="0.3008%" y="293" width="0.0161%" height="15" fill="rgb(227,0,7)" fg:x="317" fg:w="17"/><text x="0.5508%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (87 samples, 0.08%)</title><rect x="0.3226%" y="293" width="0.0826%" height="15" fill="rgb(217,0,24)" fg:x="340" fg:w="87"/><text x="0.5726%" y="303.50"></text></g><g><title>postgres`BlockIdSet (32 samples, 0.03%)</title><rect x="0.5171%" y="229" width="0.0304%" height="15" fill="rgb(221,193,54)" fg:x="545" fg:w="32"/><text x="0.7671%" y="239.50"></text></g><g><title>postgres`BufferIsValid (139 samples, 0.13%)</title><rect x="0.5475%" y="229" width="0.1319%" height="15" fill="rgb(248,212,6)" fg:x="577" fg:w="139"/><text x="0.7975%" y="239.50"></text></g><g><title>postgres`ItemPointerSetInvalid (41 samples, 0.04%)</title><rect x="0.6794%" y="229" width="0.0389%" height="15" fill="rgb(208,68,35)" fg:x="716" fg:w="41"/><text x="0.9294%" y="239.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mkostemps (18 samples, 0.02%)</title><rect x="0.8938%" y="181" width="0.0171%" height="15" fill="rgb(232,128,0)" fg:x="942" fg:w="18"/><text x="1.1438%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (71 samples, 0.07%)</title><rect x="0.9166%" y="181" width="0.0674%" height="15" fill="rgb(207,160,47)" fg:x="966" fg:w="71"/><text x="1.1666%" y="191.50"></text></g><g><title>postgres`DYLD-STUB$$__memset_chk (25 samples, 0.02%)</title><rect x="0.9840%" y="181" width="0.0237%" height="15" fill="rgb(228,23,34)" fg:x="1037" fg:w="25"/><text x="1.2340%" y="191.50"></text></g><g><title>postgres`MemoryChunkGetBlock (44 samples, 0.04%)</title><rect x="1.0077%" y="181" width="0.0418%" height="15" fill="rgb(218,30,26)" fg:x="1062" fg:w="44"/><text x="1.2577%" y="191.50"></text></g><g><title>postgres`MemoryChunkGetValue (27 samples, 0.03%)</title><rect x="1.0494%" y="181" width="0.0256%" height="15" fill="rgb(220,122,19)" fg:x="1106" fg:w="27"/><text x="1.2994%" y="191.50"></text></g><g><title>postgres`MemoryChunkIsExternal (44 samples, 0.04%)</title><rect x="1.0751%" y="181" width="0.0418%" height="15" fill="rgb(250,228,42)" fg:x="1133" fg:w="44"/><text x="1.3251%" y="191.50"></text></g><g><title>postgres`AllocSetFree (423 samples, 0.40%)</title><rect x="0.7591%" y="197" width="0.4014%" height="15" fill="rgb(240,193,28)" fg:x="800" fg:w="423"/><text x="1.0091%" y="207.50"></text></g><g><title>postgres`wipe_mem (46 samples, 0.04%)</title><rect x="1.1168%" y="181" width="0.0436%" height="15" fill="rgb(216,20,37)" fg:x="1177" fg:w="46"/><text x="1.3668%" y="191.50"></text></g><g><title>postgres`GetMemoryChunkMethodID (66 samples, 0.06%)</title><rect x="1.1605%" y="197" width="0.0626%" height="15" fill="rgb(206,188,39)" fg:x="1223" fg:w="66"/><text x="1.4105%" y="207.50"></text></g><g><title>postgres`sentinel_ok (44 samples, 0.04%)</title><rect x="1.2354%" y="197" width="0.0418%" height="15" fill="rgb(217,207,13)" fg:x="1302" fg:w="44"/><text x="1.4854%" y="207.50"></text></g><g><title>postgres`heap_freetuple (594 samples, 0.56%)</title><rect x="0.7183%" y="229" width="0.5636%" height="15" fill="rgb(231,73,38)" fg:x="757" fg:w="594"/><text x="0.9683%" y="239.50"></text></g><g><title>postgres`pfree (576 samples, 0.55%)</title><rect x="0.7354%" y="213" width="0.5465%" height="15" fill="rgb(225,20,46)" fg:x="775" fg:w="576"/><text x="0.9854%" y="223.50"></text></g><g><title>postgres`ExecClearTuple (884 samples, 0.84%)</title><rect x="0.4507%" y="261" width="0.8388%" height="15" fill="rgb(210,31,41)" fg:x="475" fg:w="884"/><text x="0.7007%" y="271.50"></text></g><g><title>postgres`tts_buffer_heap_clear (848 samples, 0.80%)</title><rect x="0.4849%" y="245" width="0.8046%" height="15" fill="rgb(221,200,47)" fg:x="511" fg:w="848"/><text x="0.7349%" y="255.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mkdtempat_np (12 samples, 0.01%)</title><rect x="1.2905%" y="245" width="0.0114%" height="15" fill="rgb(226,26,5)" fg:x="1360" fg:w="12"/><text x="1.5405%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (129 samples, 0.12%)</title><rect x="1.3075%" y="245" width="0.1224%" height="15" fill="rgb(249,33,26)" fg:x="1378" fg:w="129"/><text x="1.5575%" y="255.50"></text></g><g><title>postgres`DYLD-STUB$$__memcpy_chk (13 samples, 0.01%)</title><rect x="1.4299%" y="245" width="0.0123%" height="15" fill="rgb(235,183,28)" fg:x="1507" fg:w="13"/><text x="1.6799%" y="255.50"></text></g><g><title>postgres`BufferGetPage (13 samples, 0.01%)</title><rect x="1.7649%" y="229" width="0.0123%" height="15" fill="rgb(221,5,38)" fg:x="1860" fg:w="13"/><text x="2.0149%" y="239.50"></text></g><g><title>postgres`tts_buffer_heap_get_heap_tuple (37 samples, 0.04%)</title><rect x="1.8901%" y="213" width="0.0351%" height="15" fill="rgb(247,18,42)" fg:x="1992" fg:w="37"/><text x="2.1401%" y="223.50"></text></g><g><title>postgres`ExecFetchSlotHeapTuple (193 samples, 0.18%)</title><rect x="1.7791%" y="229" width="0.1831%" height="15" fill="rgb(241,131,45)" fg:x="1875" fg:w="193"/><text x="2.0291%" y="239.50"></text></g><g><title>postgres`tts_buffer_heap_materialize (39 samples, 0.04%)</title><rect x="1.9252%" y="213" width="0.0370%" height="15" fill="rgb(249,31,29)" fg:x="2029" fg:w="39"/><text x="2.1752%" y="223.50"></text></g><g><title>postgres`GetPrivateRefCount (19 samples, 0.02%)</title><rect x="1.9755%" y="213" width="0.0180%" height="15" fill="rgb(225,111,53)" fg:x="2082" fg:w="19"/><text x="2.2255%" y="223.50"></text></g><g><title>postgres`GetPrivateRefCountEntry (15 samples, 0.01%)</title><rect x="1.9793%" y="197" width="0.0142%" height="15" fill="rgb(238,160,17)" fg:x="2086" fg:w="15"/><text x="2.2293%" y="207.50"></text></g><g><title>postgres`MarkBufferDirty (26 samples, 0.02%)</title><rect x="1.9708%" y="229" width="0.0247%" height="15" fill="rgb(214,148,48)" fg:x="2077" fg:w="26"/><text x="2.2208%" y="239.50"></text></g><g><title>postgres`PageGetFreeSpace (35 samples, 0.03%)</title><rect x="1.9955%" y="229" width="0.0332%" height="15" fill="rgb(232,36,49)" fg:x="2103" fg:w="35"/><text x="2.2455%" y="239.50"></text></g><g><title>postgres`PageGetHeapFreeSpace (32 samples, 0.03%)</title><rect x="2.0287%" y="229" width="0.0304%" height="15" fill="rgb(209,103,24)" fg:x="2138" fg:w="32"/><text x="2.2787%" y="239.50"></text></g><g><title>postgres`PageGetItemId (15 samples, 0.01%)</title><rect x="2.0590%" y="229" width="0.0142%" height="15" fill="rgb(229,88,8)" fg:x="2170" fg:w="15"/><text x="2.3090%" y="239.50"></text></g><g><title>postgres`PageGetMaxOffsetNumber (35 samples, 0.03%)</title><rect x="2.0733%" y="229" width="0.0332%" height="15" fill="rgb(213,181,19)" fg:x="2185" fg:w="35"/><text x="2.3233%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (50 samples, 0.05%)</title><rect x="2.1245%" y="213" width="0.0474%" height="15" fill="rgb(254,191,54)" fg:x="2239" fg:w="50"/><text x="2.3745%" y="223.50"></text></g><g><title>postgres`BufferGetBlockNumber (19 samples, 0.02%)</title><rect x="2.1739%" y="213" width="0.0180%" height="15" fill="rgb(241,83,37)" fg:x="2291" fg:w="19"/><text x="2.4239%" y="223.50"></text></g><g><title>postgres`GetPrivateRefCount (17 samples, 0.02%)</title><rect x="2.1757%" y="197" width="0.0161%" height="15" fill="rgb(233,36,39)" fg:x="2293" fg:w="17"/><text x="2.4257%" y="207.50"></text></g><g><title>postgres`GetPrivateRefCountEntry (12 samples, 0.01%)</title><rect x="2.1805%" y="181" width="0.0114%" height="15" fill="rgb(226,3,54)" fg:x="2298" fg:w="12"/><text x="2.4305%" y="191.50"></text></g><g><title>postgres`BufferGetPage (12 samples, 0.01%)</title><rect x="2.1919%" y="213" width="0.0114%" height="15" fill="rgb(245,192,40)" fg:x="2310" fg:w="12"/><text x="2.4419%" y="223.50"></text></g><g><title>postgres`GetVisibilityMapPins (26 samples, 0.02%)</title><rect x="2.2099%" y="213" width="0.0247%" height="15" fill="rgb(238,167,29)" fg:x="2329" fg:w="26"/><text x="2.4599%" y="223.50"></text></g><g><title>postgres`GetPrivateRefCount (57 samples, 0.05%)</title><rect x="2.2469%" y="197" width="0.0541%" height="15" fill="rgb(232,182,51)" fg:x="2368" fg:w="57"/><text x="2.4969%" y="207.50"></text></g><g><title>postgres`GetPrivateRefCountEntry (47 samples, 0.04%)</title><rect x="2.2564%" y="181" width="0.0446%" height="15" fill="rgb(231,60,39)" fg:x="2378" fg:w="47"/><text x="2.5064%" y="191.50"></text></g><g><title>postgres`LockBuffer (85 samples, 0.08%)</title><rect x="2.2365%" y="213" width="0.0807%" height="15" fill="rgb(208,69,12)" fg:x="2357" fg:w="85"/><text x="2.4865%" y="223.50"></text></g><g><title>postgres`MarkBufferDirty (30 samples, 0.03%)</title><rect x="2.3171%" y="213" width="0.0285%" height="15" fill="rgb(235,93,37)" fg:x="2442" fg:w="30"/><text x="2.5671%" y="223.50"></text></g><g><title>postgres`BufferGetBlockNumber (37 samples, 0.04%)</title><rect x="2.3617%" y="197" width="0.0351%" height="15" fill="rgb(213,116,39)" fg:x="2489" fg:w="37"/><text x="2.6117%" y="207.50"></text></g><g><title>postgres`GetPrivateRefCount (31 samples, 0.03%)</title><rect x="2.3674%" y="181" width="0.0294%" height="15" fill="rgb(222,207,29)" fg:x="2495" fg:w="31"/><text x="2.6174%" y="191.50"></text></g><g><title>postgres`GetPrivateRefCountEntry (20 samples, 0.02%)</title><rect x="2.3779%" y="165" width="0.0190%" height="15" fill="rgb(206,96,30)" fg:x="2506" fg:w="20"/><text x="2.6279%" y="175.50"></text></g><g><title>postgres`GetPrivateRefCount (21 samples, 0.02%)</title><rect x="2.4101%" y="181" width="0.0199%" height="15" fill="rgb(218,138,4)" fg:x="2540" fg:w="21"/><text x="2.6601%" y="191.50"></text></g><g><title>postgres`GetPrivateRefCountEntry (16 samples, 0.02%)</title><rect x="2.4149%" y="165" width="0.0152%" height="15" fill="rgb(250,191,14)" fg:x="2545" fg:w="16"/><text x="2.6649%" y="175.50"></text></g><g><title>postgres`GetPrivateRefCountEntry (14 samples, 0.01%)</title><rect x="2.4300%" y="181" width="0.0133%" height="15" fill="rgb(239,60,40)" fg:x="2561" fg:w="14"/><text x="2.6800%" y="191.50"></text></g><g><title>postgres`IncrBufferRefCount (66 samples, 0.06%)</title><rect x="2.3987%" y="197" width="0.0626%" height="15" fill="rgb(206,27,48)" fg:x="2528" fg:w="66"/><text x="2.6487%" y="207.50"></text></g><g><title>postgres`ResourceOwnerRememberBuffer (19 samples, 0.02%)</title><rect x="2.4433%" y="181" width="0.0180%" height="15" fill="rgb(225,35,8)" fg:x="2575" fg:w="19"/><text x="2.6933%" y="191.50"></text></g><g><title>postgres`ResourceArrayAdd (18 samples, 0.02%)</title><rect x="2.4443%" y="165" width="0.0171%" height="15" fill="rgb(250,213,24)" fg:x="2576" fg:w="18"/><text x="2.6943%" y="175.50"></text></g><g><title>postgres`BufTableHashCode (14 samples, 0.01%)</title><rect x="2.4689%" y="149" width="0.0133%" height="15" fill="rgb(247,123,22)" fg:x="2602" fg:w="14"/><text x="2.7189%" y="159.50"></text></g><g><title>postgres`get_hash_value (14 samples, 0.01%)</title><rect x="2.4689%" y="133" width="0.0133%" height="15" fill="rgb(231,138,38)" fg:x="2602" fg:w="14"/><text x="2.7189%" y="143.50"></text></g><g><title>postgres`tag_hash (14 samples, 0.01%)</title><rect x="2.4689%" y="117" width="0.0133%" height="15" fill="rgb(231,145,46)" fg:x="2602" fg:w="14"/><text x="2.7189%" y="127.50"></text></g><g><title>postgres`BufTableLookup (12 samples, 0.01%)</title><rect x="2.4822%" y="149" width="0.0114%" height="15" fill="rgb(251,118,11)" fg:x="2616" fg:w="12"/><text x="2.7322%" y="159.50"></text></g><g><title>postgres`BufferAlloc (82 samples, 0.08%)</title><rect x="2.4671%" y="165" width="0.0778%" height="15" fill="rgb(217,147,25)" fg:x="2600" fg:w="82"/><text x="2.7171%" y="175.50"></text></g><g><title>postgres`PinBuffer (36 samples, 0.03%)</title><rect x="2.5107%" y="149" width="0.0342%" height="15" fill="rgb(247,81,37)" fg:x="2646" fg:w="36"/><text x="2.7607%" y="159.50"></text></g><g><title>postgres`ReadBuffer_common (98 samples, 0.09%)</title><rect x="2.4652%" y="181" width="0.0930%" height="15" fill="rgb(209,12,38)" fg:x="2598" fg:w="98"/><text x="2.7152%" y="191.50"></text></g><g><title>postgres`ReadBufferExtended (103 samples, 0.10%)</title><rect x="2.4614%" y="197" width="0.0977%" height="15" fill="rgb(227,1,9)" fg:x="2594" fg:w="103"/><text x="2.7114%" y="207.50"></text></g><g><title>postgres`UnpinBuffer (26 samples, 0.02%)</title><rect x="2.5657%" y="181" width="0.0247%" height="15" fill="rgb(248,47,43)" fg:x="2704" fg:w="26"/><text x="2.8157%" y="191.50"></text></g><g><title>postgres`ReleaseBuffer (35 samples, 0.03%)</title><rect x="2.5591%" y="197" width="0.0332%" height="15" fill="rgb(221,10,30)" fg:x="2697" fg:w="35"/><text x="2.8091%" y="207.50"></text></g><g><title>postgres`ReadBufferBI (248 samples, 0.24%)</title><rect x="2.3579%" y="213" width="0.2353%" height="15" fill="rgb(210,229,1)" fg:x="2485" fg:w="248"/><text x="2.6079%" y="223.50"></text></g><g><title>postgres`BufferGetBlockNumber (37 samples, 0.04%)</title><rect x="2.5951%" y="197" width="0.0351%" height="15" fill="rgb(222,148,37)" fg:x="2735" fg:w="37"/><text x="2.8451%" y="207.50"></text></g><g><title>postgres`GetPrivateRefCount (34 samples, 0.03%)</title><rect x="2.5980%" y="181" width="0.0323%" height="15" fill="rgb(234,67,33)" fg:x="2738" fg:w="34"/><text x="2.8480%" y="191.50"></text></g><g><title>postgres`GetPrivateRefCountEntry (32 samples, 0.03%)</title><rect x="2.5999%" y="165" width="0.0304%" height="15" fill="rgb(247,98,35)" fg:x="2740" fg:w="32"/><text x="2.8499%" y="175.50"></text></g><g><title>postgres`hash_search (20 samples, 0.02%)</title><rect x="2.6113%" y="149" width="0.0190%" height="15" fill="rgb(247,138,52)" fg:x="2752" fg:w="20"/><text x="2.8613%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (36 samples, 0.03%)</title><rect x="2.6331%" y="165" width="0.0342%" height="15" fill="rgb(213,79,30)" fg:x="2775" fg:w="36"/><text x="2.8831%" y="175.50"></text></g><g><title>postgres`BufTableHashCode (15 samples, 0.01%)</title><rect x="2.6739%" y="149" width="0.0142%" height="15" fill="rgb(246,177,23)" fg:x="2818" fg:w="15"/><text x="2.9239%" y="159.50"></text></g><g><title>postgres`get_hash_value (15 samples, 0.01%)</title><rect x="2.6739%" y="133" width="0.0142%" height="15" fill="rgb(230,62,27)" fg:x="2818" fg:w="15"/><text x="2.9239%" y="143.50"></text></g><g><title>postgres`tag_hash (15 samples, 0.01%)</title><rect x="2.6739%" y="117" width="0.0142%" height="15" fill="rgb(216,154,8)" fg:x="2818" fg:w="15"/><text x="2.9239%" y="127.50"></text></g><g><title>postgres`BufTableInsert (24 samples, 0.02%)</title><rect x="2.6881%" y="149" width="0.0228%" height="15" fill="rgb(244,35,45)" fg:x="2833" fg:w="24"/><text x="2.9381%" y="159.50"></text></g><g><title>postgres`hash_search_with_hash_value (16 samples, 0.02%)</title><rect x="2.6957%" y="133" width="0.0152%" height="15" fill="rgb(251,115,12)" fg:x="2841" fg:w="16"/><text x="2.9457%" y="143.50"></text></g><g><title>postgres`CheckBufferIsPinnedOnce (31 samples, 0.03%)</title><rect x="2.7593%" y="133" width="0.0294%" height="15" fill="rgb(240,54,50)" fg:x="2908" fg:w="31"/><text x="3.0093%" y="143.50"></text></g><g><title>postgres`GetPrivateRefCount (29 samples, 0.03%)</title><rect x="2.7612%" y="117" width="0.0275%" height="15" fill="rgb(233,84,52)" fg:x="2910" fg:w="29"/><text x="3.0112%" y="127.50"></text></g><g><title>postgres`GetPrivateRefCountEntry (23 samples, 0.02%)</title><rect x="2.7669%" y="101" width="0.0218%" height="15" fill="rgb(207,117,47)" fg:x="2916" fg:w="23"/><text x="3.0169%" y="111.50"></text></g><g><title>postgres`PageSetChecksumCopy (12 samples, 0.01%)</title><rect x="2.7963%" y="117" width="0.0114%" height="15" fill="rgb(249,43,39)" fg:x="2947" fg:w="12"/><text x="3.0463%" y="127.50"></text></g><g><title>postgres`ResourceOwnerRememberBufferIO (34 samples, 0.03%)</title><rect x="2.8134%" y="101" width="0.0323%" height="15" fill="rgb(209,38,44)" fg:x="2965" fg:w="34"/><text x="3.0634%" y="111.50"></text></g><g><title>postgres`ResourceArrayAdd (33 samples, 0.03%)</title><rect x="2.8143%" y="85" width="0.0313%" height="15" fill="rgb(236,212,23)" fg:x="2966" fg:w="33"/><text x="3.0643%" y="95.50"></text></g><g><title>postgres`StartBufferIO (44 samples, 0.04%)</title><rect x="2.8086%" y="117" width="0.0418%" height="15" fill="rgb(242,79,21)" fg:x="2960" fg:w="44"/><text x="3.0586%" y="127.50"></text></g><g><title>postgres`TerminateBufferIO (20 samples, 0.02%)</title><rect x="2.8504%" y="117" width="0.0190%" height="15" fill="rgb(211,96,35)" fg:x="3004" fg:w="20"/><text x="3.1004%" y="127.50"></text></g><g><title>postgres`hash_bytes (18 samples, 0.02%)</title><rect x="2.9016%" y="69" width="0.0171%" height="15" fill="rgb(253,215,40)" fg:x="3058" fg:w="18"/><text x="3.1516%" y="79.50"></text></g><g><title>postgres`smgropen (47 samples, 0.04%)</title><rect x="2.8893%" y="117" width="0.0446%" height="15" fill="rgb(211,81,21)" fg:x="3045" fg:w="47"/><text x="3.1393%" y="127.50"></text></g><g><title>postgres`hash_search (47 samples, 0.04%)</title><rect x="2.8893%" y="101" width="0.0446%" height="15" fill="rgb(208,190,38)" fg:x="3045" fg:w="47"/><text x="3.1393%" y="111.50"></text></g><g><title>postgres`tag_hash (34 samples, 0.03%)</title><rect x="2.9016%" y="85" width="0.0323%" height="15" fill="rgb(235,213,38)" fg:x="3058" fg:w="34"/><text x="3.1516%" y="95.50"></text></g><g><title>postgres`pg_rotate_left32 (16 samples, 0.02%)</title><rect x="2.9187%" y="69" width="0.0152%" height="15" fill="rgb(237,122,38)" fg:x="3076" fg:w="16"/><text x="3.1687%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`pwrite (803 samples, 0.76%)</title><rect x="2.9367%" y="85" width="0.7619%" height="15" fill="rgb(244,218,35)" fg:x="3095" fg:w="803"/><text x="3.1867%" y="95.50"></text></g><g><title>postgres`LWLockAcquire (13 samples, 0.01%)</title><rect x="3.7082%" y="37" width="0.0123%" height="15" fill="rgb(240,68,47)" fg:x="3908" fg:w="13"/><text x="3.9582%" y="47.50"></text></g><g><title>postgres`FlushBuffer (991 samples, 0.94%)</title><rect x="2.7887%" y="133" width="0.9403%" height="15" fill="rgb(210,16,53)" fg:x="2939" fg:w="991"/><text x="3.0387%" y="143.50"></text></g><g><title>postgres`smgrwrite (838 samples, 0.80%)</title><rect x="2.9339%" y="117" width="0.7951%" height="15" fill="rgb(235,124,12)" fg:x="3092" fg:w="838"/><text x="3.1839%" y="127.50"></text></g><g><title>postgres`mdwrite (837 samples, 0.79%)</title><rect x="2.9348%" y="101" width="0.7942%" height="15" fill="rgb(224,169,11)" fg:x="3093" fg:w="837"/><text x="3.1848%" y="111.50"></text></g><g><title>postgres`register_dirty_segment (25 samples, 0.02%)</title><rect x="3.7053%" y="85" width="0.0237%" height="15" fill="rgb(250,166,2)" fg:x="3905" fg:w="25"/><text x="3.9553%" y="95.50"></text></g><g><title>postgres`RegisterSyncRequest (24 samples, 0.02%)</title><rect x="3.7063%" y="69" width="0.0228%" height="15" fill="rgb(242,216,29)" fg:x="3906" fg:w="24"/><text x="3.9563%" y="79.50"></text></g><g><title>postgres`ForwardSyncRequest (23 samples, 0.02%)</title><rect x="3.7072%" y="53" width="0.0218%" height="15" fill="rgb(230,116,27)" fg:x="3907" fg:w="23"/><text x="3.9572%" y="63.50"></text></g><g><title>postgres`BufTableDelete (15 samples, 0.01%)</title><rect x="3.7452%" y="117" width="0.0142%" height="15" fill="rgb(228,99,48)" fg:x="3947" fg:w="15"/><text x="3.9952%" y="127.50"></text></g><g><title>postgres`hash_search_with_hash_value (13 samples, 0.01%)</title><rect x="3.7471%" y="101" width="0.0123%" height="15" fill="rgb(253,11,6)" fg:x="3949" fg:w="13"/><text x="3.9971%" y="111.50"></text></g><g><title>postgres`BufTableHashCode (31 samples, 0.03%)</title><rect x="3.7594%" y="117" width="0.0294%" height="15" fill="rgb(247,143,39)" fg:x="3962" fg:w="31"/><text x="4.0094%" y="127.50"></text></g><g><title>postgres`get_hash_value (30 samples, 0.03%)</title><rect x="3.7604%" y="101" width="0.0285%" height="15" fill="rgb(236,97,10)" fg:x="3963" fg:w="30"/><text x="4.0104%" y="111.50"></text></g><g><title>postgres`tag_hash (30 samples, 0.03%)</title><rect x="3.7604%" y="85" width="0.0285%" height="15" fill="rgb(233,208,19)" fg:x="3963" fg:w="30"/><text x="4.0104%" y="95.50"></text></g><g><title>postgres`pg_rotate_left32 (20 samples, 0.02%)</title><rect x="3.7698%" y="69" width="0.0190%" height="15" fill="rgb(216,164,2)" fg:x="3973" fg:w="20"/><text x="4.0198%" y="79.50"></text></g><g><title>postgres`GetPrivateRefCount (17 samples, 0.02%)</title><rect x="3.7898%" y="117" width="0.0161%" height="15" fill="rgb(220,129,5)" fg:x="3994" fg:w="17"/><text x="4.0398%" y="127.50"></text></g><g><title>postgres`GetPrivateRefCountEntry (11 samples, 0.01%)</title><rect x="3.7955%" y="101" width="0.0104%" height="15" fill="rgb(242,17,10)" fg:x="4000" fg:w="11"/><text x="4.0455%" y="111.50"></text></g><g><title>postgres`LWLockAcquire (13 samples, 0.01%)</title><rect x="3.8059%" y="117" width="0.0123%" height="15" fill="rgb(242,107,0)" fg:x="4011" fg:w="13"/><text x="4.0559%" y="127.50"></text></g><g><title>postgres`InvalidateVictimBuffer (106 samples, 0.10%)</title><rect x="3.7290%" y="133" width="0.1006%" height="15" fill="rgb(251,28,31)" fg:x="3930" fg:w="106"/><text x="3.9790%" y="143.50"></text></g><g><title>postgres`LWLockConditionalAcquire (12 samples, 0.01%)</title><rect x="3.8296%" y="133" width="0.0114%" height="15" fill="rgb(233,223,10)" fg:x="4036" fg:w="12"/><text x="4.0796%" y="143.50"></text></g><g><title>postgres`hash_search_with_hash_value (12 samples, 0.01%)</title><rect x="3.8704%" y="85" width="0.0114%" height="15" fill="rgb(215,21,27)" fg:x="4079" fg:w="12"/><text x="4.1204%" y="95.50"></text></g><g><title>postgres`GetPrivateRefCountEntry (36 samples, 0.03%)</title><rect x="3.8495%" y="117" width="0.0342%" height="15" fill="rgb(232,23,21)" fg:x="4057" fg:w="36"/><text x="4.0995%" y="127.50"></text></g><g><title>postgres`hash_search (21 samples, 0.02%)</title><rect x="3.8638%" y="101" width="0.0199%" height="15" fill="rgb(244,5,23)" fg:x="4072" fg:w="21"/><text x="4.1138%" y="111.50"></text></g><g><title>postgres`ResourceOwnerRememberBuffer (22 samples, 0.02%)</title><rect x="3.8856%" y="117" width="0.0209%" height="15" fill="rgb(226,81,46)" fg:x="4095" fg:w="22"/><text x="4.1356%" y="127.50"></text></g><g><title>postgres`ResourceArrayAdd (21 samples, 0.02%)</title><rect x="3.8866%" y="101" width="0.0199%" height="15" fill="rgb(247,70,30)" fg:x="4096" fg:w="21"/><text x="4.1366%" y="111.50"></text></g><g><title>postgres`hash_any (13 samples, 0.01%)</title><rect x="3.8941%" y="85" width="0.0123%" height="15" fill="rgb(212,68,19)" fg:x="4104" fg:w="13"/><text x="4.1441%" y="95.50"></text></g><g><title>postgres`PinBuffer_Locked (67 samples, 0.06%)</title><rect x="3.8467%" y="133" width="0.0636%" height="15" fill="rgb(240,187,13)" fg:x="4054" fg:w="67"/><text x="4.0967%" y="143.50"></text></g><g><title>postgres`calc_bucket (14 samples, 0.01%)</title><rect x="3.9179%" y="101" width="0.0133%" height="15" fill="rgb(223,113,26)" fg:x="4129" fg:w="14"/><text x="4.1679%" y="111.50"></text></g><g><title>postgres`ReservePrivateRefCountEntry (37 samples, 0.04%)</title><rect x="3.9103%" y="133" width="0.0351%" height="15" fill="rgb(206,192,2)" fg:x="4121" fg:w="37"/><text x="4.1603%" y="143.50"></text></g><g><title>postgres`hash_search (29 samples, 0.03%)</title><rect x="3.9179%" y="117" width="0.0275%" height="15" fill="rgb(241,108,4)" fg:x="4129" fg:w="29"/><text x="4.1679%" y="127.50"></text></g><g><title>postgres`StrategyGetBuffer (11 samples, 0.01%)</title><rect x="3.9492%" y="133" width="0.0104%" height="15" fill="rgb(247,173,49)" fg:x="4162" fg:w="11"/><text x="4.1992%" y="143.50"></text></g><g><title>postgres`pg_atomic_read_u32 (75 samples, 0.07%)</title><rect x="3.9653%" y="133" width="0.0712%" height="15" fill="rgb(224,114,35)" fg:x="4179" fg:w="75"/><text x="4.2153%" y="143.50"></text></g><g><title>postgres`pg_atomic_read_u32_impl (25 samples, 0.02%)</title><rect x="4.0365%" y="133" width="0.0237%" height="15" fill="rgb(245,159,27)" fg:x="4254" fg:w="25"/><text x="4.2865%" y="143.50"></text></g><g><title>postgres`pgstat_count_io_op (11 samples, 0.01%)</title><rect x="4.0602%" y="133" width="0.0104%" height="15" fill="rgb(245,172,44)" fg:x="4279" fg:w="11"/><text x="4.3102%" y="143.50"></text></g><g><title>postgres`pgstat_count_io_op_n (11 samples, 0.01%)</title><rect x="4.0602%" y="117" width="0.0104%" height="15" fill="rgb(236,23,11)" fg:x="4279" fg:w="11"/><text x="4.3102%" y="127.50"></text></g><g><title>postgres`GetVictimBuffer (1,428 samples, 1.35%)</title><rect x="2.7166%" y="149" width="1.3550%" height="15" fill="rgb(205,117,38)" fg:x="2863" fg:w="1428"/><text x="2.9666%" y="159.50"></text></g><g><title>postgres`LWLockRelease (73 samples, 0.07%)</title><rect x="4.0792%" y="149" width="0.0693%" height="15" fill="rgb(237,72,25)" fg:x="4299" fg:w="73"/><text x="4.3292%" y="159.50"></text></g><g><title>postgres`StartBufferIO (11 samples, 0.01%)</title><rect x="4.1570%" y="149" width="0.0104%" height="15" fill="rgb(244,70,9)" fg:x="4381" fg:w="11"/><text x="4.4070%" y="159.50"></text></g><g><title>postgres`TerminateBufferIO (18 samples, 0.02%)</title><rect x="4.1674%" y="149" width="0.0171%" height="15" fill="rgb(217,125,39)" fg:x="4392" fg:w="18"/><text x="4.4174%" y="159.50"></text></g><g><title>postgres`smgrnblocks (12 samples, 0.01%)</title><rect x="4.1930%" y="149" width="0.0114%" height="15" fill="rgb(235,36,10)" fg:x="4419" fg:w="12"/><text x="4.4430%" y="159.50"></text></g><g><title>postgres`mdnblocks (12 samples, 0.01%)</title><rect x="4.1930%" y="133" width="0.0114%" height="15" fill="rgb(251,123,47)" fg:x="4419" fg:w="12"/><text x="4.4430%" y="143.50"></text></g><g><title>postgres`_mdnblocks (11 samples, 0.01%)</title><rect x="4.1940%" y="117" width="0.0104%" height="15" fill="rgb(221,13,13)" fg:x="4420" fg:w="11"/><text x="4.4440%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`pwritev (394 samples, 0.37%)</title><rect x="4.2044%" y="69" width="0.3739%" height="15" fill="rgb(238,131,9)" fg:x="4431" fg:w="394"/><text x="4.4544%" y="79.50"></text></g><g><title>postgres`FileFallocate (395 samples, 0.37%)</title><rect x="4.2044%" y="117" width="0.3748%" height="15" fill="rgb(211,50,8)" fg:x="4431" fg:w="395"/><text x="4.4544%" y="127.50"></text></g><g><title>postgres`FileZero (395 samples, 0.37%)</title><rect x="4.2044%" y="101" width="0.3748%" height="15" fill="rgb(245,182,24)" fg:x="4431" fg:w="395"/><text x="4.4544%" y="111.50"></text></g><g><title>postgres`pg_pwrite_zeros (395 samples, 0.37%)</title><rect x="4.2044%" y="85" width="0.3748%" height="15" fill="rgb(242,14,37)" fg:x="4431" fg:w="395"/><text x="4.4544%" y="95.50"></text></g><g><title>postgres`ExtendBufferedRelShared (2,018 samples, 1.91%)</title><rect x="2.6673%" y="165" width="1.9148%" height="15" fill="rgb(246,228,12)" fg:x="2811" fg:w="2018"/><text x="2.9173%" y="175.50">p..</text></g><g><title>postgres`smgrzeroextend (398 samples, 0.38%)</title><rect x="4.2044%" y="149" width="0.3776%" height="15" fill="rgb(213,55,15)" fg:x="4431" fg:w="398"/><text x="4.4544%" y="159.50"></text></g><g><title>postgres`mdzeroextend (398 samples, 0.38%)</title><rect x="4.2044%" y="133" width="0.3776%" height="15" fill="rgb(209,9,3)" fg:x="4431" fg:w="398"/><text x="4.4544%" y="143.50"></text></g><g><title>postgres`ExtendBufferedRelBy (2,057 samples, 1.95%)</title><rect x="2.6312%" y="197" width="1.9518%" height="15" fill="rgb(230,59,30)" fg:x="2773" fg:w="2057"/><text x="2.8812%" y="207.50">p..</text></g><g><title>postgres`ExtendBufferedRelCommon (2,056 samples, 1.95%)</title><rect x="2.6322%" y="181" width="1.9509%" height="15" fill="rgb(209,121,21)" fg:x="2774" fg:w="2056"/><text x="2.8822%" y="191.50">p..</text></g><g><title>postgres`calc_bucket (11 samples, 0.01%)</title><rect x="4.5982%" y="133" width="0.0104%" height="15" fill="rgb(220,109,13)" fg:x="4846" fg:w="11"/><text x="4.8482%" y="143.50"></text></g><g><title>postgres`ForgetPrivateRefCountEntry (25 samples, 0.02%)</title><rect x="4.5944%" y="165" width="0.0237%" height="15" fill="rgb(232,18,1)" fg:x="4842" fg:w="25"/><text x="4.8444%" y="175.50"></text></g><g><title>postgres`hash_search (21 samples, 0.02%)</title><rect x="4.5982%" y="149" width="0.0199%" height="15" fill="rgb(215,41,42)" fg:x="4846" fg:w="21"/><text x="4.8482%" y="159.50"></text></g><g><title>postgres`GetPrivateRefCountEntry (29 samples, 0.03%)</title><rect x="4.6181%" y="165" width="0.0275%" height="15" fill="rgb(224,123,36)" fg:x="4867" fg:w="29"/><text x="4.8681%" y="175.50"></text></g><g><title>postgres`hash_search (20 samples, 0.02%)</title><rect x="4.6267%" y="149" width="0.0190%" height="15" fill="rgb(240,125,3)" fg:x="4876" fg:w="20"/><text x="4.8767%" y="159.50"></text></g><g><title>postgres`hash_any (17 samples, 0.02%)</title><rect x="4.6532%" y="133" width="0.0161%" height="15" fill="rgb(205,98,50)" fg:x="4904" fg:w="17"/><text x="4.9032%" y="143.50"></text></g><g><title>postgres`pg_rotate_left32 (14 samples, 0.01%)</title><rect x="4.6561%" y="117" width="0.0133%" height="15" fill="rgb(205,185,37)" fg:x="4907" fg:w="14"/><text x="4.9061%" y="127.50"></text></g><g><title>postgres`RelationAddBlocks (2,189 samples, 2.08%)</title><rect x="2.5932%" y="213" width="2.0771%" height="15" fill="rgb(238,207,15)" fg:x="2733" fg:w="2189"/><text x="2.8432%" y="223.50">p..</text></g><g><title>postgres`ReleaseBuffer (89 samples, 0.08%)</title><rect x="4.5859%" y="197" width="0.0844%" height="15" fill="rgb(213,199,42)" fg:x="4833" fg:w="89"/><text x="4.8359%" y="207.50"></text></g><g><title>postgres`UnpinBuffer (82 samples, 0.08%)</title><rect x="4.5925%" y="181" width="0.0778%" height="15" fill="rgb(235,201,11)" fg:x="4840" fg:w="82"/><text x="4.8425%" y="191.50"></text></g><g><title>postgres`ResourceOwnerForgetBuffer (25 samples, 0.02%)</title><rect x="4.6466%" y="165" width="0.0237%" height="15" fill="rgb(207,46,11)" fg:x="4897" fg:w="25"/><text x="4.8966%" y="175.50"></text></g><g><title>postgres`ResourceArrayRemove (25 samples, 0.02%)</title><rect x="4.6466%" y="149" width="0.0237%" height="15" fill="rgb(241,35,35)" fg:x="4897" fg:w="25"/><text x="4.8966%" y="159.50"></text></g><g><title>postgres`ReleaseBuffer (12 samples, 0.01%)</title><rect x="4.6722%" y="213" width="0.0114%" height="15" fill="rgb(243,32,47)" fg:x="4924" fg:w="12"/><text x="4.9222%" y="223.50"></text></g><g><title>postgres`RelationGetBufferForTuple (2,717 samples, 2.58%)</title><rect x="2.1065%" y="229" width="2.5781%" height="15" fill="rgb(247,202,23)" fg:x="2220" fg:w="2717"/><text x="2.3565%" y="239.50">po..</text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mkdtempat_np (23 samples, 0.02%)</title><rect x="4.7453%" y="213" width="0.0218%" height="15" fill="rgb(219,102,11)" fg:x="5001" fg:w="23"/><text x="4.9953%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (125 samples, 0.12%)</title><rect x="4.7709%" y="213" width="0.1186%" height="15" fill="rgb(243,110,44)" fg:x="5028" fg:w="125"/><text x="5.0209%" y="223.50"></text></g><g><title>postgres`BlockIdSet (27 samples, 0.03%)</title><rect x="4.8895%" y="213" width="0.0256%" height="15" fill="rgb(222,74,54)" fg:x="5153" fg:w="27"/><text x="5.1395%" y="223.50"></text></g><g><title>postgres`BufferIsValid (58 samples, 0.06%)</title><rect x="4.9673%" y="197" width="0.0550%" height="15" fill="rgb(216,99,12)" fg:x="5235" fg:w="58"/><text x="5.2173%" y="207.50"></text></g><g><title>postgres`BufferIsValid (62 samples, 0.06%)</title><rect x="5.0736%" y="181" width="0.0588%" height="15" fill="rgb(226,22,26)" fg:x="5347" fg:w="62"/><text x="5.3236%" y="191.50"></text></g><g><title>postgres`GetPrivateRefCount (522 samples, 0.50%)</title><rect x="5.0223%" y="197" width="0.4953%" height="15" fill="rgb(217,163,10)" fg:x="5293" fg:w="522"/><text x="5.2723%" y="207.50"></text></g><g><title>postgres`GetPrivateRefCountEntry (406 samples, 0.39%)</title><rect x="5.1324%" y="181" width="0.3852%" height="15" fill="rgb(213,25,53)" fg:x="5409" fg:w="406"/><text x="5.3824%" y="191.50"></text></g><g><title>postgres`BufferIsValid (57 samples, 0.05%)</title><rect x="5.4636%" y="165" width="0.0541%" height="15" fill="rgb(252,105,26)" fg:x="5758" fg:w="57"/><text x="5.7136%" y="175.50"></text></g><g><title>postgres`BufferGetBlockNumber (638 samples, 0.61%)</title><rect x="4.9237%" y="213" width="0.6054%" height="15" fill="rgb(220,39,43)" fg:x="5189" fg:w="638"/><text x="5.1737%" y="223.50"></text></g><g><title>postgres`GetPrivateRefCountEntry (12 samples, 0.01%)</title><rect x="5.5177%" y="197" width="0.0114%" height="15" fill="rgb(229,68,48)" fg:x="5815" fg:w="12"/><text x="5.7677%" y="207.50"></text></g><g><title>postgres`BufferGetBlock (99 samples, 0.09%)</title><rect x="5.5366%" y="197" width="0.0939%" height="15" fill="rgb(252,8,32)" fg:x="5835" fg:w="99"/><text x="5.7866%" y="207.50"></text></g><g><title>postgres`BufferIsValid (60 samples, 0.06%)</title><rect x="5.5736%" y="181" width="0.0569%" height="15" fill="rgb(223,20,43)" fg:x="5874" fg:w="60"/><text x="5.8236%" y="191.50"></text></g><g><title>postgres`BufferGetPage (111 samples, 0.11%)</title><rect x="5.5290%" y="213" width="0.1053%" height="15" fill="rgb(229,81,49)" fg:x="5827" fg:w="111"/><text x="5.7790%" y="223.50"></text></g><g><title>postgres`DYLD-STUB$$__memcpy_chk (21 samples, 0.02%)</title><rect x="5.6401%" y="213" width="0.0199%" height="15" fill="rgb(236,28,36)" fg:x="5944" fg:w="21"/><text x="5.8901%" y="223.50"></text></g><g><title>postgres`GetBufferDescriptor (14 samples, 0.01%)</title><rect x="5.6600%" y="213" width="0.0133%" height="15" fill="rgb(249,185,26)" fg:x="5965" fg:w="14"/><text x="5.9100%" y="223.50"></text></g><g><title>postgres`ItemPointerSet (23 samples, 0.02%)</title><rect x="5.6733%" y="213" width="0.0218%" height="15" fill="rgb(249,174,33)" fg:x="5979" fg:w="23"/><text x="5.9233%" y="223.50"></text></g><g><title>postgres`PageAddItemExtended (215 samples, 0.20%)</title><rect x="5.6951%" y="213" width="0.2040%" height="15" fill="rgb(233,201,37)" fg:x="6002" fg:w="215"/><text x="5.9451%" y="223.50"></text></g><g><title>postgres`PageGetItem (72 samples, 0.07%)</title><rect x="5.8991%" y="213" width="0.0683%" height="15" fill="rgb(221,78,26)" fg:x="6217" fg:w="72"/><text x="6.1491%" y="223.50"></text></g><g><title>postgres`PageGetItemId (13 samples, 0.01%)</title><rect x="5.9674%" y="213" width="0.0123%" height="15" fill="rgb(250,127,30)" fg:x="6289" fg:w="13"/><text x="6.2174%" y="223.50"></text></g><g><title>postgres`PageGetMaxOffsetNumber (45 samples, 0.04%)</title><rect x="5.9798%" y="213" width="0.0427%" height="15" fill="rgb(230,49,44)" fg:x="6302" fg:w="45"/><text x="6.2298%" y="223.50"></text></g><g><title>postgres`RelationPutHeapTuple (1,427 samples, 1.35%)</title><rect x="4.6855%" y="229" width="1.3540%" height="15" fill="rgb(229,67,23)" fg:x="4938" fg:w="1427"/><text x="4.9355%" y="239.50"></text></g><g><title>postgres`PageHasFreeLinePointers (18 samples, 0.02%)</title><rect x="6.0225%" y="213" width="0.0171%" height="15" fill="rgb(249,83,47)" fg:x="6347" fg:w="18"/><text x="6.2725%" y="223.50"></text></g><g><title>postgres`LockBuffer (19 samples, 0.02%)</title><rect x="6.0405%" y="213" width="0.0180%" height="15" fill="rgb(215,43,3)" fg:x="6366" fg:w="19"/><text x="6.2905%" y="223.50"></text></g><g><title>postgres`UnlockReleaseBuffer (41 samples, 0.04%)</title><rect x="6.0395%" y="229" width="0.0389%" height="15" fill="rgb(238,154,13)" fg:x="6365" fg:w="41"/><text x="6.2895%" y="239.50"></text></g><g><title>postgres`ReleaseBuffer (21 samples, 0.02%)</title><rect x="6.0585%" y="213" width="0.0199%" height="15" fill="rgb(219,56,2)" fg:x="6385" fg:w="21"/><text x="6.3085%" y="223.50"></text></g><g><title>postgres`UnpinBuffer (16 samples, 0.02%)</title><rect x="6.0633%" y="197" width="0.0152%" height="15" fill="rgb(233,0,4)" fg:x="6390" fg:w="16"/><text x="6.3133%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (113 samples, 0.11%)</title><rect x="6.1031%" y="197" width="0.1072%" height="15" fill="rgb(235,30,7)" fg:x="6432" fg:w="113"/><text x="6.3531%" y="207.50"></text></g><g><title>postgres`CopyXLogRecordToWAL (33 samples, 0.03%)</title><rect x="6.2103%" y="197" width="0.0313%" height="15" fill="rgb(250,79,13)" fg:x="6545" fg:w="33"/><text x="6.4603%" y="207.50"></text></g><g><title>postgres`GetXLogBuffer (13 samples, 0.01%)</title><rect x="6.2293%" y="181" width="0.0123%" height="15" fill="rgb(211,146,34)" fg:x="6565" fg:w="13"/><text x="6.4793%" y="191.50"></text></g><g><title>postgres`ReserveXLogInsertLocation (11 samples, 0.01%)</title><rect x="6.2445%" y="197" width="0.0104%" height="15" fill="rgb(228,22,38)" fg:x="6581" fg:w="11"/><text x="6.4945%" y="207.50"></text></g><g><title>postgres`WALInsertLockAcquire (12 samples, 0.01%)</title><rect x="6.2549%" y="197" width="0.0114%" height="15" fill="rgb(235,168,5)" fg:x="6592" fg:w="12"/><text x="6.5049%" y="207.50"></text></g><g><title>postgres`LWLockReleaseClearVar (22 samples, 0.02%)</title><rect x="6.2692%" y="181" width="0.0209%" height="15" fill="rgb(221,155,16)" fg:x="6607" fg:w="22"/><text x="6.5192%" y="191.50"></text></g><g><title>postgres`WALInsertLockRelease (26 samples, 0.02%)</title><rect x="6.2663%" y="197" width="0.0247%" height="15" fill="rgb(215,215,53)" fg:x="6604" fg:w="26"/><text x="6.5163%" y="207.50"></text></g><g><title>postgres`XLogInsertRecord (218 samples, 0.21%)</title><rect x="6.0936%" y="213" width="0.2069%" height="15" fill="rgb(223,4,10)" fg:x="6422" fg:w="218"/><text x="6.3436%" y="223.50"></text></g><g><title>postgres`XLogRecordAssemble (15 samples, 0.01%)</title><rect x="6.3005%" y="213" width="0.0142%" height="15" fill="rgb(234,103,6)" fg:x="6640" fg:w="15"/><text x="6.5505%" y="223.50"></text></g><g><title>postgres`XLogInsert (1,340 samples, 1.27%)</title><rect x="6.0832%" y="229" width="1.2715%" height="15" fill="rgb(227,97,0)" fg:x="6411" fg:w="1340"/><text x="6.3332%" y="239.50"></text></g><g><title>postgres`pg_comp_crc32c_armv8 (1,096 samples, 1.04%)</title><rect x="6.3147%" y="213" width="1.0400%" height="15" fill="rgb(234,150,53)" fg:x="6655" fg:w="1096"/><text x="6.5647%" y="223.50"></text></g><g><title>postgres`BufferGetTag (16 samples, 0.02%)</title><rect x="7.3708%" y="213" width="0.0152%" height="15" fill="rgb(228,201,54)" fg:x="7768" fg:w="16"/><text x="7.6208%" y="223.50"></text></g><g><title>postgres`GetPrivateRefCount (13 samples, 0.01%)</title><rect x="7.3736%" y="197" width="0.0123%" height="15" fill="rgb(222,22,37)" fg:x="7771" fg:w="13"/><text x="7.6236%" y="207.50"></text></g><g><title>postgres`XLogRegisterBuffer (27 samples, 0.03%)</title><rect x="7.3613%" y="229" width="0.0256%" height="15" fill="rgb(237,53,32)" fg:x="7758" fg:w="27"/><text x="7.6113%" y="239.50"></text></g><g><title>postgres`XLogResetInsertion (14 samples, 0.01%)</title><rect x="7.3888%" y="229" width="0.0133%" height="15" fill="rgb(233,25,53)" fg:x="7787" fg:w="14"/><text x="7.6388%" y="239.50"></text></g><g><title>postgres`heap_prepare_insert (174 samples, 0.17%)</title><rect x="7.4021%" y="229" width="0.1651%" height="15" fill="rgb(210,40,34)" fg:x="7801" fg:w="174"/><text x="7.6521%" y="239.50"></text></g><g><title>postgres`heap_multi_insert (6,437 samples, 6.11%)</title><rect x="1.4603%" y="245" width="6.1078%" height="15" fill="rgb(241,220,44)" fg:x="1539" fg:w="6437"/><text x="1.7103%" y="255.50">postgres..</text></g><g><title>postgres`heap_multi_insert_pages (111 samples, 0.11%)</title><rect x="7.5682%" y="245" width="0.1053%" height="15" fill="rgb(235,28,35)" fg:x="7976" fg:w="111"/><text x="7.8182%" y="255.50"></text></g><g><title>postgres`table_multi_insert (6,746 samples, 6.40%)</title><rect x="1.2905%" y="261" width="6.4010%" height="15" fill="rgb(210,56,17)" fg:x="1360" fg:w="6746"/><text x="1.5405%" y="271.50">postgres..</text></g><g><title>postgres`heap_prepare_insert (19 samples, 0.02%)</title><rect x="7.6735%" y="245" width="0.0180%" height="15" fill="rgb(224,130,29)" fg:x="8087" fg:w="19"/><text x="7.9235%" y="255.50"></text></g><g><title>postgres`CopyMultiInsertBufferFlush (7,680 samples, 7.29%)</title><rect x="0.4052%" y="277" width="7.2873%" height="15" fill="rgb(235,212,8)" fg:x="427" fg:w="7680"/><text x="0.6552%" y="287.50">postgres`C..</text></g><g><title>postgres`CopyMultiInsertInfoFlush (7,683 samples, 7.29%)</title><rect x="0.4052%" y="293" width="7.2901%" height="15" fill="rgb(223,33,50)" fg:x="427" fg:w="7683"/><text x="0.6552%" y="303.50">postgres`C..</text></g><g><title>postgres`CopyMultiInsertInfoNextFreeSlot (91 samples, 0.09%)</title><rect x="7.6953%" y="293" width="0.0863%" height="15" fill="rgb(219,149,13)" fg:x="8110" fg:w="91"/><text x="7.9453%" y="303.50"></text></g><g><title>postgres`CopyMultiInsertInfoStore (93 samples, 0.09%)</title><rect x="7.7816%" y="293" width="0.0882%" height="15" fill="rgb(250,156,29)" fg:x="8201" fg:w="93"/><text x="8.0316%" y="303.50"></text></g><g><title>postgres`DYLD-STUB$$__memset_chk (16 samples, 0.02%)</title><rect x="7.8699%" y="293" width="0.0152%" height="15" fill="rgb(216,193,19)" fg:x="8294" fg:w="16"/><text x="8.1199%" y="303.50"></text></g><g><title>postgres`BlockIdSet (24 samples, 0.02%)</title><rect x="7.9392%" y="261" width="0.0228%" height="15" fill="rgb(216,135,14)" fg:x="8367" fg:w="24"/><text x="8.1892%" y="271.50"></text></g><g><title>postgres`BufferIsValid (72 samples, 0.07%)</title><rect x="7.9619%" y="261" width="0.0683%" height="15" fill="rgb(241,47,5)" fg:x="8391" fg:w="72"/><text x="8.2119%" y="271.50"></text></g><g><title>postgres`ExecClearTuple (196 samples, 0.19%)</title><rect x="7.8851%" y="293" width="0.1860%" height="15" fill="rgb(233,42,35)" fg:x="8310" fg:w="196"/><text x="8.1351%" y="303.50"></text></g><g><title>postgres`tts_buffer_heap_clear (171 samples, 0.16%)</title><rect x="7.9088%" y="277" width="0.1623%" height="15" fill="rgb(231,13,6)" fg:x="8335" fg:w="171"/><text x="8.1588%" y="287.50"></text></g><g><title>postgres`ItemPointerSetInvalid (43 samples, 0.04%)</title><rect x="8.0302%" y="261" width="0.0408%" height="15" fill="rgb(207,181,40)" fg:x="8463" fg:w="43"/><text x="8.2802%" y="271.50"></text></g><g><title>postgres`DatumGetBool (12 samples, 0.01%)</title><rect x="9.0512%" y="261" width="0.0114%" height="15" fill="rgb(254,173,49)" fg:x="9539" fg:w="12"/><text x="9.3012%" y="271.50"></text></g><g><title>postgres`BoolGetDatum (21 samples, 0.02%)</title><rect x="9.7648%" y="213" width="0.0199%" height="15" fill="rgb(221,1,38)" fg:x="10291" fg:w="21"/><text x="10.0148%" y="223.50"></text></g><g><title>postgres`CheckOpSlotCompatibility (38 samples, 0.04%)</title><rect x="9.7847%" y="213" width="0.0361%" height="15" fill="rgb(206,124,46)" fg:x="10312" fg:w="38"/><text x="10.0347%" y="223.50"></text></g><g><title>postgres`DatumGetDateADT (22 samples, 0.02%)</title><rect x="9.8274%" y="197" width="0.0209%" height="15" fill="rgb(249,21,11)" fg:x="10357" fg:w="22"/><text x="10.0774%" y="207.50"></text></g><g><title>postgres`date_le (63 samples, 0.06%)</title><rect x="9.8217%" y="213" width="0.0598%" height="15" fill="rgb(222,201,40)" fg:x="10351" fg:w="63"/><text x="10.0717%" y="223.50"></text></g><g><title>postgres`DatumGetInt32 (35 samples, 0.03%)</title><rect x="9.8483%" y="197" width="0.0332%" height="15" fill="rgb(235,61,29)" fg:x="10379" fg:w="35"/><text x="10.0983%" y="207.50"></text></g><g><title>postgres`ExecInterpExpr (853 samples, 0.81%)</title><rect x="9.1262%" y="229" width="0.8094%" height="15" fill="rgb(219,207,3)" fg:x="9618" fg:w="853"/><text x="9.3762%" y="239.50"></text></g><g><title>postgres`slot_getsomeattrs (57 samples, 0.05%)</title><rect x="9.8815%" y="213" width="0.0541%" height="15" fill="rgb(222,56,46)" fg:x="10414" fg:w="57"/><text x="10.1315%" y="223.50"></text></g><g><title>postgres`ExecEvalExprSwitchContext (878 samples, 0.83%)</title><rect x="9.1082%" y="245" width="0.8331%" height="15" fill="rgb(239,76,54)" fg:x="9599" fg:w="878"/><text x="9.3582%" y="255.50"></text></g><g><title>postgres`ExecInterpExpr (14 samples, 0.01%)</title><rect x="9.9413%" y="245" width="0.0133%" height="15" fill="rgb(231,124,27)" fg:x="10477" fg:w="14"/><text x="10.1913%" y="255.50"></text></g><g><title>postgres`ExecCheck (994 samples, 0.94%)</title><rect x="9.0626%" y="261" width="0.9432%" height="15" fill="rgb(249,195,6)" fg:x="9551" fg:w="994"/><text x="9.3126%" y="271.50"></text></g><g><title>postgres`MemoryContextSwitchTo (54 samples, 0.05%)</title><rect x="9.9545%" y="245" width="0.0512%" height="15" fill="rgb(237,174,47)" fg:x="10491" fg:w="54"/><text x="10.2045%" y="255.50"></text></g><g><title>postgres`ExecRelCheck (1,140 samples, 1.08%)</title><rect x="8.9279%" y="277" width="1.0817%" height="15" fill="rgb(206,201,31)" fg:x="9409" fg:w="1140"/><text x="9.1779%" y="287.50"></text></g><g><title>postgres`ExecConstraints (2,794 samples, 2.65%)</title><rect x="8.0711%" y="293" width="2.6511%" height="15" fill="rgb(231,57,52)" fg:x="8506" fg:w="2794"/><text x="8.3211%" y="303.50">po..</text></g><g><title>postgres`slot_attisnull (751 samples, 0.71%)</title><rect x="10.0096%" y="277" width="0.7126%" height="15" fill="rgb(248,177,22)" fg:x="10549" fg:w="751"/><text x="10.2596%" y="287.50"></text></g><g><title>postgres`MemoryContextSwitchTo (45 samples, 0.04%)</title><rect x="10.7469%" y="277" width="0.0427%" height="15" fill="rgb(215,211,37)" fg:x="11326" fg:w="45"/><text x="10.9969%" y="287.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mkostemps (17 samples, 0.02%)</title><rect x="11.4376%" y="245" width="0.0161%" height="15" fill="rgb(241,128,51)" fg:x="12054" fg:w="17"/><text x="11.6876%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (83 samples, 0.08%)</title><rect x="11.4613%" y="245" width="0.0788%" height="15" fill="rgb(227,165,31)" fg:x="12079" fg:w="83"/><text x="11.7113%" y="255.50"></text></g><g><title>postgres`BlockIdSet (41 samples, 0.04%)</title><rect x="11.5401%" y="245" width="0.0389%" height="15" fill="rgb(228,167,24)" fg:x="12162" fg:w="41"/><text x="11.7901%" y="255.50"></text></g><g><title>postgres`DYLD-STUB$$__memset_chk (14 samples, 0.01%)</title><rect x="11.5790%" y="245" width="0.0133%" height="15" fill="rgb(228,143,12)" fg:x="12203" fg:w="14"/><text x="11.8290%" y="255.50"></text></g><g><title>postgres`DatumGetPointer (389 samples, 0.37%)</title><rect x="11.5923%" y="245" width="0.3691%" height="15" fill="rgb(249,149,8)" fg:x="12217" fg:w="389"/><text x="11.8423%" y="255.50"></text></g><g><title>postgres`ItemPointerSetInvalid (52 samples, 0.05%)</title><rect x="11.9614%" y="245" width="0.0493%" height="15" fill="rgb(243,35,44)" fg:x="12606" fg:w="52"/><text x="12.2114%" y="255.50"></text></g><g><title>postgres`fill_val (16 samples, 0.02%)</title><rect x="12.0107%" y="245" width="0.0152%" height="15" fill="rgb(246,89,9)" fg:x="12658" fg:w="16"/><text x="12.2607%" y="255.50"></text></g><g><title>postgres`heap_compute_data_size (1,714 samples, 1.63%)</title><rect x="12.0259%" y="245" width="1.6264%" height="15" fill="rgb(233,213,13)" fg:x="12674" fg:w="1714"/><text x="12.2759%" y="255.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mkdtempat_np (77 samples, 0.07%)</title><rect x="14.9238%" y="229" width="0.0731%" height="15" fill="rgb(233,141,41)" fg:x="15728" fg:w="77"/><text x="15.1738%" y="239.50"></text></g><g><title>libsystem_c.dylib`__memcpy_chk (91 samples, 0.09%)</title><rect x="14.9968%" y="229" width="0.0863%" height="15" fill="rgb(239,167,4)" fg:x="15805" fg:w="91"/><text x="15.2468%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (960 samples, 0.91%)</title><rect x="15.0832%" y="229" width="0.9109%" height="15" fill="rgb(209,217,16)" fg:x="15896" fg:w="960"/><text x="15.3332%" y="239.50"></text></g><g><title>postgres`DYLD-STUB$$__memcpy_chk (71 samples, 0.07%)</title><rect x="15.9941%" y="229" width="0.0674%" height="15" fill="rgb(219,88,35)" fg:x="16856" fg:w="71"/><text x="16.2441%" y="239.50"></text></g><g><title>postgres`DatumGetPointer (110 samples, 0.10%)</title><rect x="16.0614%" y="229" width="0.1044%" height="15" fill="rgb(220,193,23)" fg:x="16927" fg:w="110"/><text x="16.3114%" y="239.50"></text></g><g><title>postgres`DatumGetInt32 (59 samples, 0.06%)</title><rect x="18.2818%" y="213" width="0.0560%" height="15" fill="rgb(230,90,52)" fg:x="19267" fg:w="59"/><text x="18.5318%" y="223.50"></text></g><g><title>postgres`fill_val (2,627 samples, 2.49%)</title><rect x="16.1658%" y="229" width="2.4927%" height="15" fill="rgb(252,106,19)" fg:x="17037" fg:w="2627"/><text x="16.4158%" y="239.50">po..</text></g><g><title>postgres`store_att_byval (338 samples, 0.32%)</title><rect x="18.3378%" y="213" width="0.3207%" height="15" fill="rgb(206,74,20)" fg:x="19326" fg:w="338"/><text x="18.5878%" y="223.50"></text></g><g><title>postgres`heap_fill_tuple (5,282 samples, 5.01%)</title><rect x="13.6523%" y="245" width="5.0119%" height="15" fill="rgb(230,138,44)" fg:x="14388" fg:w="5282"/><text x="13.9023%" y="255.50">postgr..</text></g><g><title>postgres`AllocSetFreeIndex (79 samples, 0.07%)</title><rect x="19.2800%" y="213" width="0.0750%" height="15" fill="rgb(235,182,43)" fg:x="20319" fg:w="79"/><text x="19.5300%" y="223.50"></text></g><g><title>postgres`pg_leftmost_one_pos32 (40 samples, 0.04%)</title><rect x="19.3170%" y="197" width="0.0380%" height="15" fill="rgb(242,16,51)" fg:x="20358" fg:w="40"/><text x="19.5670%" y="207.50"></text></g><g><title>postgres`AllocSetAlloc (341 samples, 0.32%)</title><rect x="19.0731%" y="229" width="0.3236%" height="15" fill="rgb(248,9,4)" fg:x="20101" fg:w="341"/><text x="19.3231%" y="239.50"></text></g><g><title>postgres`MemoryChunkGetValue (44 samples, 0.04%)</title><rect x="19.3550%" y="213" width="0.0418%" height="15" fill="rgb(210,31,22)" fg:x="20398" fg:w="44"/><text x="19.6050%" y="223.50"></text></g><g><title>postgres`ExecMaterializeSlot (9,193 samples, 8.72%)</title><rect x="10.7222%" y="293" width="8.7229%" height="15" fill="rgb(239,54,39)" fg:x="11300" fg:w="9193"/><text x="10.9722%" y="303.50">postgres`Exe..</text></g><g><title>postgres`tts_buffer_heap_materialize (9,116 samples, 8.65%)</title><rect x="10.7952%" y="277" width="8.6499%" height="15" fill="rgb(230,99,41)" fg:x="11377" fg:w="9116"/><text x="11.0452%" y="287.50">postgres`tts..</text></g><g><title>postgres`heap_form_tuple (9,045 samples, 8.58%)</title><rect x="10.8626%" y="261" width="8.5825%" height="15" fill="rgb(253,106,12)" fg:x="11448" fg:w="9045"/><text x="11.1126%" y="271.50">postgres`hea..</text></g><g><title>postgres`palloc0 (823 samples, 0.78%)</title><rect x="18.6642%" y="245" width="0.7809%" height="15" fill="rgb(213,46,41)" fg:x="19670" fg:w="823"/><text x="18.9142%" y="255.50"></text></g><g><title>postgres`set_sentinel (44 samples, 0.04%)</title><rect x="19.4034%" y="229" width="0.0418%" height="15" fill="rgb(215,133,35)" fg:x="20449" fg:w="44"/><text x="19.6534%" y="239.50"></text></g><g><title>postgres`ExecStoreVirtualTuple (104 samples, 0.10%)</title><rect x="19.4461%" y="293" width="0.0987%" height="15" fill="rgb(213,28,5)" fg:x="20494" fg:w="104"/><text x="19.6961%" y="303.50"></text></g><g><title>postgres`InputFunctionCall (34 samples, 0.03%)</title><rect x="19.5447%" y="293" width="0.0323%" height="15" fill="rgb(215,77,49)" fg:x="20598" fg:w="34"/><text x="19.7947%" y="303.50"></text></g><g><title>postgres`AllocSetCheck (14 samples, 0.01%)</title><rect x="19.7820%" y="261" width="0.0133%" height="15" fill="rgb(248,100,22)" fg:x="20848" fg:w="14"/><text x="20.0320%" y="271.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mkostemps (16 samples, 0.02%)</title><rect x="20.1719%" y="245" width="0.0152%" height="15" fill="rgb(208,67,9)" fg:x="21259" fg:w="16"/><text x="20.4219%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (67 samples, 0.06%)</title><rect x="20.1938%" y="245" width="0.0636%" height="15" fill="rgb(219,133,21)" fg:x="21282" fg:w="67"/><text x="20.4438%" y="255.50"></text></g><g><title>postgres`MemoryChunkGetBlock (454 samples, 0.43%)</title><rect x="21.9435%" y="229" width="0.4308%" height="15" fill="rgb(246,46,29)" fg:x="23126" fg:w="454"/><text x="22.1935%" y="239.50"></text></g><g><title>postgres`MemoryChunkGetValue (349 samples, 0.33%)</title><rect x="22.3743%" y="229" width="0.3312%" height="15" fill="rgb(246,185,52)" fg:x="23580" fg:w="349"/><text x="22.6243%" y="239.50"></text></g><g><title>postgres`AllocSetCheck (2,944 samples, 2.79%)</title><rect x="20.2573%" y="245" width="2.7935%" height="15" fill="rgb(252,136,11)" fg:x="21349" fg:w="2944"/><text x="20.5073%" y="255.50">po..</text></g><g><title>postgres`MemoryChunkIsExternal (364 samples, 0.35%)</title><rect x="22.7054%" y="229" width="0.3454%" height="15" fill="rgb(219,138,53)" fg:x="23929" fg:w="364"/><text x="22.9554%" y="239.50"></text></g><g><title>postgres`DYLD-STUB$$__memset_chk (26 samples, 0.02%)</title><rect x="23.0508%" y="245" width="0.0247%" height="15" fill="rgb(211,51,23)" fg:x="24293" fg:w="26"/><text x="23.3008%" y="255.50"></text></g><g><title>postgres`MemoryChunkGetValue (24 samples, 0.02%)</title><rect x="23.0840%" y="245" width="0.0228%" height="15" fill="rgb(247,221,28)" fg:x="24328" fg:w="24"/><text x="23.3340%" y="255.50"></text></g><g><title>postgres`MemoryChunkIsExternal (69 samples, 0.07%)</title><rect x="23.1068%" y="245" width="0.0655%" height="15" fill="rgb(251,222,45)" fg:x="24352" fg:w="69"/><text x="23.3568%" y="255.50"></text></g><g><title>postgres`sentinel_ok (270 samples, 0.26%)</title><rect x="23.1722%" y="245" width="0.2562%" height="15" fill="rgb(217,162,53)" fg:x="24421" fg:w="270"/><text x="23.4222%" y="255.50"></text></g><g><title>postgres`AllocSetReset (3,893 samples, 3.69%)</title><rect x="19.7952%" y="261" width="3.6939%" height="15" fill="rgb(229,93,14)" fg:x="20862" fg:w="3893"/><text x="20.0452%" y="271.50">post..</text></g><g><title>postgres`wipe_mem (64 samples, 0.06%)</title><rect x="23.4284%" y="245" width="0.0607%" height="15" fill="rgb(209,67,49)" fg:x="24691" fg:w="64"/><text x="23.6784%" y="255.50"></text></g><g><title>postgres`MemoryContextCallResetCallbacks (39 samples, 0.04%)</title><rect x="23.4892%" y="261" width="0.0370%" height="15" fill="rgb(213,87,29)" fg:x="24755" fg:w="39"/><text x="23.7392%" y="271.50"></text></g><g><title>postgres`MemoryContextReset (4,167 samples, 3.95%)</title><rect x="19.5770%" y="293" width="3.9539%" height="15" fill="rgb(205,151,52)" fg:x="20632" fg:w="4167"/><text x="19.8270%" y="303.50">post..</text></g><g><title>postgres`MemoryContextResetOnly (4,083 samples, 3.87%)</title><rect x="19.6567%" y="277" width="3.8742%" height="15" fill="rgb(253,215,39)" fg:x="20716" fg:w="4083"/><text x="19.9067%" y="287.50">post..</text></g><g><title>postgres`CStringGetDatum (54 samples, 0.05%)</title><rect x="26.2058%" y="277" width="0.0512%" height="15" fill="rgb(221,220,41)" fg:x="27618" fg:w="54"/><text x="26.4558%" y="287.50"></text></g><g><title>libsystem_c.dylib`isdigit (67 samples, 0.06%)</title><rect x="28.0380%" y="261" width="0.0636%" height="15" fill="rgb(218,133,21)" fg:x="29549" fg:w="67"/><text x="28.2880%" y="271.50"></text></g><g><title>libsystem_c.dylib`isspace (20 samples, 0.02%)</title><rect x="28.1016%" y="261" width="0.0190%" height="15" fill="rgb(221,193,43)" fg:x="29616" fg:w="20"/><text x="28.3516%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (457 samples, 0.43%)</title><rect x="28.1206%" y="261" width="0.4336%" height="15" fill="rgb(240,128,52)" fg:x="29636" fg:w="457"/><text x="28.3706%" y="271.50"></text></g><g><title>postgres`CStringGetDatum (241 samples, 0.23%)</title><rect x="28.5542%" y="261" width="0.2287%" height="15" fill="rgb(253,114,12)" fg:x="30093" fg:w="241"/><text x="28.8042%" y="271.50"></text></g><g><title>postgres`DYLD-STUB$$isdigit (72 samples, 0.07%)</title><rect x="28.7829%" y="261" width="0.0683%" height="15" fill="rgb(215,223,47)" fg:x="30334" fg:w="72"/><text x="29.0329%" y="271.50"></text></g><g><title>postgres`DYLD-STUB$$isspace (69 samples, 0.07%)</title><rect x="28.8512%" y="261" width="0.0655%" height="15" fill="rgb(248,225,23)" fg:x="30406" fg:w="69"/><text x="29.1012%" y="271.50"></text></g><g><title>postgres`DYLD-STUB$$strlen (92 samples, 0.09%)</title><rect x="28.9167%" y="261" width="0.0873%" height="15" fill="rgb(250,108,0)" fg:x="30475" fg:w="92"/><text x="29.1667%" y="271.50"></text></g><g><title>postgres`DatumGetCString (88 samples, 0.08%)</title><rect x="29.0078%" y="261" width="0.0835%" height="15" fill="rgb(228,208,7)" fg:x="30571" fg:w="88"/><text x="29.2578%" y="271.50"></text></g><g><title>postgres`DatumGetInt32 (126 samples, 0.12%)</title><rect x="29.0913%" y="261" width="0.1196%" height="15" fill="rgb(244,45,10)" fg:x="30659" fg:w="126"/><text x="29.3413%" y="271.50"></text></g><g><title>postgres`DecodeDateTime (36 samples, 0.03%)</title><rect x="29.2108%" y="261" width="0.0342%" height="15" fill="rgb(207,125,25)" fg:x="30785" fg:w="36"/><text x="29.4608%" y="271.50"></text></g><g><title>postgres`Int32GetDatum (48 samples, 0.05%)</title><rect x="29.2450%" y="261" width="0.0455%" height="15" fill="rgb(210,195,18)" fg:x="30821" fg:w="48"/><text x="29.4950%" y="271.50"></text></g><g><title>postgres`ParseDateTime (28 samples, 0.03%)</title><rect x="29.2934%" y="261" width="0.0266%" height="15" fill="rgb(249,80,12)" fg:x="30872" fg:w="28"/><text x="29.5434%" y="271.50"></text></g><g><title>postgres`PointerGetDatum (365 samples, 0.35%)</title><rect x="29.3199%" y="261" width="0.3463%" height="15" fill="rgb(221,65,9)" fg:x="30900" fg:w="365"/><text x="29.5699%" y="271.50"></text></g><g><title>postgres`bpchar_input (17 samples, 0.02%)</title><rect x="29.6663%" y="261" width="0.0161%" height="15" fill="rgb(235,49,36)" fg:x="31265" fg:w="17"/><text x="29.9163%" y="271.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mkdtempat_np (57 samples, 0.05%)</title><rect x="29.7299%" y="245" width="0.0541%" height="15" fill="rgb(225,32,20)" fg:x="31332" fg:w="57"/><text x="29.9799%" y="255.50"></text></g><g><title>libsystem_c.dylib`__memcpy_chk (26 samples, 0.02%)</title><rect x="29.7839%" y="245" width="0.0247%" height="15" fill="rgb(215,141,46)" fg:x="31389" fg:w="26"/><text x="30.0339%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (189 samples, 0.18%)</title><rect x="29.8086%" y="245" width="0.1793%" height="15" fill="rgb(250,160,47)" fg:x="31415" fg:w="189"/><text x="30.0586%" y="255.50"></text></g><g><title>postgres`DatumGetCString (27 samples, 0.03%)</title><rect x="29.9879%" y="245" width="0.0256%" height="15" fill="rgb(216,222,40)" fg:x="31604" fg:w="27"/><text x="30.2379%" y="255.50"></text></g><g><title>postgres`DatumGetPointer (101 samples, 0.10%)</title><rect x="30.0136%" y="245" width="0.0958%" height="15" fill="rgb(234,217,39)" fg:x="31631" fg:w="101"/><text x="30.2636%" y="255.50"></text></g><g><title>postgres`AllocSetFreeIndex (289 samples, 0.27%)</title><rect x="31.9085%" y="197" width="0.2742%" height="15" fill="rgb(207,178,40)" fg:x="33628" fg:w="289"/><text x="32.1585%" y="207.50"></text></g><g><title>postgres`pg_leftmost_one_pos32 (77 samples, 0.07%)</title><rect x="32.1096%" y="181" width="0.0731%" height="15" fill="rgb(221,136,13)" fg:x="33840" fg:w="77"/><text x="32.3596%" y="191.50"></text></g><g><title>postgres`MemoryChunkGetValue (71 samples, 0.07%)</title><rect x="32.1827%" y="197" width="0.0674%" height="15" fill="rgb(249,199,10)" fg:x="33917" fg:w="71"/><text x="32.4327%" y="207.50"></text></g><g><title>postgres`MemoryChunkSetHdrMask (247 samples, 0.23%)</title><rect x="32.2500%" y="197" width="0.2344%" height="15" fill="rgb(249,222,13)" fg:x="33988" fg:w="247"/><text x="32.5000%" y="207.50"></text></g><g><title>postgres`AllocSetAlloc (1,687 samples, 1.60%)</title><rect x="30.8960%" y="213" width="1.6007%" height="15" fill="rgb(244,185,38)" fg:x="32561" fg:w="1687"/><text x="31.1460%" y="223.50"></text></g><g><title>postgres`pg_leftmost_one_pos32 (13 samples, 0.01%)</title><rect x="32.4844%" y="197" width="0.0123%" height="15" fill="rgb(236,202,9)" fg:x="34235" fg:w="13"/><text x="32.7344%" y="207.50"></text></g><g><title>postgres`MemoryChunkGetValue (11 samples, 0.01%)</title><rect x="32.4977%" y="213" width="0.0104%" height="15" fill="rgb(250,229,37)" fg:x="34249" fg:w="11"/><text x="32.7477%" y="223.50"></text></g><g><title>postgres`MemoryChunkSetHdrMask (16 samples, 0.02%)</title><rect x="32.5081%" y="213" width="0.0152%" height="15" fill="rgb(206,174,23)" fg:x="34260" fg:w="16"/><text x="32.7581%" y="223.50"></text></g><g><title>postgres`palloc (2,365 samples, 2.24%)</title><rect x="30.4453%" y="229" width="2.2441%" height="15" fill="rgb(211,33,43)" fg:x="32086" fg:w="2365"/><text x="30.6953%" y="239.50">p..</text></g><g><title>postgres`set_sentinel (175 samples, 0.17%)</title><rect x="32.5233%" y="213" width="0.1661%" height="15" fill="rgb(245,58,50)" fg:x="34276" fg:w="175"/><text x="32.7733%" y="223.50"></text></g><g><title>postgres`pg_database_encoding_max_length (18 samples, 0.02%)</title><rect x="32.6894%" y="229" width="0.0171%" height="15" fill="rgb(244,68,36)" fg:x="34451" fg:w="18"/><text x="32.9394%" y="239.50"></text></g><g><title>postgres`pg_mblen (21 samples, 0.02%)</title><rect x="32.7064%" y="229" width="0.0199%" height="15" fill="rgb(232,229,15)" fg:x="34469" fg:w="21"/><text x="32.9564%" y="239.50"></text></g><g><title>postgres`GetDatabaseEncoding (60 samples, 0.06%)</title><rect x="34.4305%" y="213" width="0.0569%" height="15" fill="rgb(254,30,23)" fg:x="36286" fg:w="60"/><text x="34.6805%" y="223.50"></text></g><g><title>postgres`pg_database_encoding_max_length (42 samples, 0.04%)</title><rect x="34.4875%" y="213" width="0.0399%" height="15" fill="rgb(235,160,14)" fg:x="36346" fg:w="42"/><text x="34.7375%" y="223.50"></text></g><g><title>postgres`pg_mblen (1,074 samples, 1.02%)</title><rect x="34.5273%" y="213" width="1.0191%" height="15" fill="rgb(212,155,44)" fg:x="36388" fg:w="1074"/><text x="34.7773%" y="223.50"></text></g><g><title>postgres`bpchar_input (6,333 samples, 6.01%)</title><rect x="30.1094%" y="245" width="6.0092%" height="15" fill="rgb(226,2,50)" fg:x="31732" fg:w="6333"/><text x="30.3594%" y="255.50">postgres..</text></g><g><title>postgres`pg_mbstrlen_with_len (3,575 samples, 3.39%)</title><rect x="32.7264%" y="229" width="3.3922%" height="15" fill="rgb(234,177,6)" fg:x="34490" fg:w="3575"/><text x="32.9764%" y="239.50">pos..</text></g><g><title>postgres`pg_utf_mblen (603 samples, 0.57%)</title><rect x="35.5464%" y="213" width="0.5722%" height="15" fill="rgb(217,24,9)" fg:x="37462" fg:w="603"/><text x="35.7964%" y="223.50"></text></g><g><title>postgres`palloc (35 samples, 0.03%)</title><rect x="36.1186%" y="245" width="0.0332%" height="15" fill="rgb(220,13,46)" fg:x="38065" fg:w="35"/><text x="36.3686%" y="255.50"></text></g><g><title>postgres`bpcharin (6,820 samples, 6.47%)</title><rect x="29.6824%" y="261" width="6.4713%" height="15" fill="rgb(239,221,27)" fg:x="31282" fg:w="6820"/><text x="29.9324%" y="271.50">postgres..</text></g><g><title>postgres`date2j (199 samples, 0.19%)</title><rect x="36.1537%" y="261" width="0.1888%" height="15" fill="rgb(222,198,25)" fg:x="38102" fg:w="199"/><text x="36.4037%" y="271.50"></text></g><g><title>libsystem_c.dylib`isdigit (530 samples, 0.50%)</title><rect x="36.8283%" y="245" width="0.5029%" height="15" fill="rgb(211,99,13)" fg:x="38813" fg:w="530"/><text x="37.0783%" y="255.50"></text></g><g><title>libsystem_c.dylib`isspace (22 samples, 0.02%)</title><rect x="37.3312%" y="245" width="0.0209%" height="15" fill="rgb(232,111,31)" fg:x="39343" fg:w="22"/><text x="37.5812%" y="255.50"></text></g><g><title>postgres`DYLD-STUB$$isdigit (786 samples, 0.75%)</title><rect x="37.3521%" y="245" width="0.7458%" height="15" fill="rgb(245,82,37)" fg:x="39365" fg:w="786"/><text x="37.6021%" y="255.50"></text></g><g><title>postgres`DYLD-STUB$$isspace (23 samples, 0.02%)</title><rect x="38.0979%" y="245" width="0.0218%" height="15" fill="rgb(227,149,46)" fg:x="40151" fg:w="23"/><text x="38.3479%" y="255.50"></text></g><g><title>postgres`DateADTGetDatum (27 samples, 0.03%)</title><rect x="38.1197%" y="245" width="0.0256%" height="15" fill="rgb(218,36,50)" fg:x="40174" fg:w="27"/><text x="38.3697%" y="255.50"></text></g><g><title>postgres`DatumGetCString (51 samples, 0.05%)</title><rect x="38.1453%" y="245" width="0.0484%" height="15" fill="rgb(226,80,48)" fg:x="40201" fg:w="51"/><text x="38.3953%" y="255.50"></text></g><g><title>postgres`DatumGetPointer (53 samples, 0.05%)</title><rect x="38.1937%" y="245" width="0.0503%" height="15" fill="rgb(238,224,15)" fg:x="40252" fg:w="53"/><text x="38.4437%" y="255.50"></text></g><g><title>postgres`DecodeDate (36 samples, 0.03%)</title><rect x="38.2440%" y="245" width="0.0342%" height="15" fill="rgb(241,136,10)" fg:x="40305" fg:w="36"/><text x="38.4940%" y="255.50"></text></g><g><title>libsystem_c.dylib`isalnum (77 samples, 0.07%)</title><rect x="39.1578%" y="229" width="0.0731%" height="15" fill="rgb(208,32,45)" fg:x="41268" fg:w="77"/><text x="39.4078%" y="239.50"></text></g><g><title>libsystem_c.dylib`isalpha (65 samples, 0.06%)</title><rect x="39.2308%" y="229" width="0.0617%" height="15" fill="rgb(207,135,9)" fg:x="41345" fg:w="65"/><text x="39.4808%" y="239.50"></text></g><g><title>libsystem_c.dylib`isdigit (644 samples, 0.61%)</title><rect x="39.2925%" y="229" width="0.6111%" height="15" fill="rgb(206,86,44)" fg:x="41410" fg:w="644"/><text x="39.5425%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (222 samples, 0.21%)</title><rect x="39.9036%" y="229" width="0.2106%" height="15" fill="rgb(245,177,15)" fg:x="42054" fg:w="222"/><text x="40.1536%" y="239.50"></text></g><g><title>postgres`DYLD-STUB$$isalnum (117 samples, 0.11%)</title><rect x="40.1142%" y="229" width="0.1110%" height="15" fill="rgb(206,64,50)" fg:x="42276" fg:w="117"/><text x="40.3642%" y="239.50"></text></g><g><title>postgres`DYLD-STUB$$isalpha (131 samples, 0.12%)</title><rect x="40.2253%" y="229" width="0.1243%" height="15" fill="rgb(234,36,40)" fg:x="42393" fg:w="131"/><text x="40.4753%" y="239.50"></text></g><g><title>postgres`DYLD-STUB$$isdigit (864 samples, 0.82%)</title><rect x="40.3496%" y="229" width="0.8198%" height="15" fill="rgb(213,64,8)" fg:x="42524" fg:w="864"/><text x="40.5996%" y="239.50"></text></g><g><title>postgres`DYLD-STUB$$strlen (148 samples, 0.14%)</title><rect x="41.1694%" y="229" width="0.1404%" height="15" fill="rgb(210,75,36)" fg:x="43388" fg:w="148"/><text x="41.4194%" y="239.50"></text></g><g><title>libsystem_c.dylib`isalnum (144 samples, 0.14%)</title><rect x="43.9685%" y="213" width="0.1366%" height="15" fill="rgb(229,88,21)" fg:x="46338" fg:w="144"/><text x="44.2185%" y="223.50"></text></g><g><title>libsystem_c.dylib`isalpha (69 samples, 0.07%)</title><rect x="44.1052%" y="213" width="0.0655%" height="15" fill="rgb(252,204,47)" fg:x="46482" fg:w="69"/><text x="44.3552%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__error (164 samples, 0.16%)</title><rect x="44.1706%" y="213" width="0.1556%" height="15" fill="rgb(208,77,27)" fg:x="46551" fg:w="164"/><text x="44.4206%" y="223.50"></text></g><g><title>postgres`DYLD-STUB$$__error (185 samples, 0.18%)</title><rect x="44.3263%" y="213" width="0.1755%" height="15" fill="rgb(221,76,26)" fg:x="46715" fg:w="185"/><text x="44.5763%" y="223.50"></text></g><g><title>libsystem_c.dylib`strtol_l (78 samples, 0.07%)</title><rect x="45.6338%" y="197" width="0.0740%" height="15" fill="rgb(225,139,18)" fg:x="48093" fg:w="78"/><text x="45.8838%" y="207.50"></text></g><g><title>postgres`DYLD-STUB$$strtol (106 samples, 0.10%)</title><rect x="45.7078%" y="197" width="0.1006%" height="15" fill="rgb(230,137,11)" fg:x="48171" fg:w="106"/><text x="45.9578%" y="207.50"></text></g><g><title>postgres`DecodeNumber (3,560 samples, 3.38%)</title><rect x="44.5018%" y="213" width="3.3780%" height="15" fill="rgb(212,28,1)" fg:x="46900" fg:w="3560"/><text x="44.7518%" y="223.50">pos..</text></g><g><title>postgres`strtoint (2,183 samples, 2.07%)</title><rect x="45.8084%" y="197" width="2.0714%" height="15" fill="rgb(248,164,17)" fg:x="48277" fg:w="2183"/><text x="46.0584%" y="207.50">p..</text></g><g><title>libsystem_c.dylib`strtol_l (2,003 samples, 1.90%)</title><rect x="45.9792%" y="181" width="1.9006%" height="15" fill="rgb(222,171,42)" fg:x="48457" fg:w="2003"/><text x="46.2292%" y="191.50">l..</text></g><g><title>postgres`DecodeDate (6,960 samples, 6.60%)</title><rect x="41.3098%" y="229" width="6.6041%" height="15" fill="rgb(243,84,45)" fg:x="43536" fg:w="6960"/><text x="41.5598%" y="239.50">postgres`..</text></g><g><title>postgres`strtoint (36 samples, 0.03%)</title><rect x="47.8798%" y="213" width="0.0342%" height="15" fill="rgb(252,49,23)" fg:x="50460" fg:w="36"/><text x="48.1298%" y="223.50"></text></g><g><title>postgres`DecodeNumber (28 samples, 0.03%)</title><rect x="47.9139%" y="229" width="0.0266%" height="15" fill="rgb(215,19,7)" fg:x="50496" fg:w="28"/><text x="48.1639%" y="239.50"></text></g><g><title>postgres`DetermineTimeZoneOffsetInternal (841 samples, 0.80%)</title><rect x="47.9547%" y="213" width="0.7980%" height="15" fill="rgb(238,81,41)" fg:x="50539" fg:w="841"/><text x="48.2047%" y="223.50"></text></g><g><title>postgres`pg_next_dst_boundary (225 samples, 0.21%)</title><rect x="48.5392%" y="197" width="0.2135%" height="15" fill="rgb(210,199,37)" fg:x="51155" fg:w="225"/><text x="48.7892%" y="207.50"></text></g><g><title>postgres`date2j (291 samples, 0.28%)</title><rect x="48.7527%" y="213" width="0.2761%" height="15" fill="rgb(244,192,49)" fg:x="51380" fg:w="291"/><text x="49.0027%" y="223.50"></text></g><g><title>postgres`DetermineTimeZoneOffset (1,158 samples, 1.10%)</title><rect x="47.9405%" y="229" width="1.0988%" height="15" fill="rgb(226,211,11)" fg:x="50524" fg:w="1158"/><text x="48.1905%" y="239.50"></text></g><g><title>postgres`pg_next_dst_boundary (11 samples, 0.01%)</title><rect x="49.0288%" y="213" width="0.0104%" height="15" fill="rgb(236,162,54)" fg:x="51671" fg:w="11"/><text x="49.2788%" y="223.50"></text></g><g><title>postgres`DetermineTimeZoneOffsetInternal (25 samples, 0.02%)</title><rect x="49.0393%" y="229" width="0.0237%" height="15" fill="rgb(220,229,9)" fg:x="51682" fg:w="25"/><text x="49.2893%" y="239.50"></text></g><g><title>postgres`DecodeDateTime (12,176 samples, 11.55%)</title><rect x="38.2782%" y="245" width="11.5534%" height="15" fill="rgb(250,87,22)" fg:x="40341" fg:w="12176"/><text x="38.5282%" y="255.50">postgres`DecodeDa..</text></g><g><title>postgres`ValidateDate (810 samples, 0.77%)</title><rect x="49.0630%" y="229" width="0.7686%" height="15" fill="rgb(239,43,17)" fg:x="51707" fg:w="810"/><text x="49.3130%" y="239.50"></text></g><g><title>postgres`Int32GetDatum (70 samples, 0.07%)</title><rect x="49.8325%" y="245" width="0.0664%" height="15" fill="rgb(231,177,25)" fg:x="52518" fg:w="70"/><text x="50.0825%" y="255.50"></text></g><g><title>postgres`ParseDateTime (1,802 samples, 1.71%)</title><rect x="49.8989%" y="245" width="1.7099%" height="15" fill="rgb(219,179,1)" fg:x="52588" fg:w="1802"/><text x="50.1489%" y="255.50"></text></g><g><title>libsystem_c.dylib`isspace (26 samples, 0.02%)</title><rect x="51.5841%" y="229" width="0.0247%" height="15" fill="rgb(238,219,53)" fg:x="54364" fg:w="26"/><text x="51.8341%" y="239.50"></text></g><g><title>postgres`date_in (16,091 samples, 15.27%)</title><rect x="36.3425%" y="261" width="15.2682%" height="15" fill="rgb(232,167,36)" fg:x="38301" fg:w="16091"/><text x="36.5925%" y="271.50">postgres`date_in</text></g><g><title>postgres`DatumGetCString (52 samples, 0.05%)</title><rect x="51.6543%" y="245" width="0.0493%" height="15" fill="rgb(244,19,51)" fg:x="54438" fg:w="52"/><text x="51.9043%" y="255.50"></text></g><g><title>postgres`DatumGetPointer (68 samples, 0.06%)</title><rect x="51.7037%" y="245" width="0.0645%" height="15" fill="rgb(224,6,22)" fg:x="54490" fg:w="68"/><text x="51.9537%" y="255.50"></text></g><g><title>postgres`int4in (1,775 samples, 1.68%)</title><rect x="51.6126%" y="261" width="1.6842%" height="15" fill="rgb(224,145,5)" fg:x="54394" fg:w="1775"/><text x="51.8626%" y="271.50"></text></g><g><title>postgres`pg_strtoint32_safe (1,611 samples, 1.53%)</title><rect x="51.7682%" y="245" width="1.5286%" height="15" fill="rgb(234,130,49)" fg:x="54558" fg:w="1611"/><text x="52.0182%" y="255.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mkdtempat_np (59 samples, 0.06%)</title><rect x="54.5190%" y="245" width="0.0560%" height="15" fill="rgb(254,6,2)" fg:x="57457" fg:w="59"/><text x="54.7690%" y="255.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mkostemps (111 samples, 0.11%)</title><rect x="54.5750%" y="245" width="0.1053%" height="15" fill="rgb(208,96,46)" fg:x="57516" fg:w="111"/><text x="54.8250%" y="255.50"></text></g><g><title>libsystem_c.dylib`__memcpy_chk (28 samples, 0.03%)</title><rect x="54.6803%" y="245" width="0.0266%" height="15" fill="rgb(239,3,39)" fg:x="57627" fg:w="28"/><text x="54.9303%" y="255.50"></text></g><g><title>libsystem_c.dylib`__memset_chk (54 samples, 0.05%)</title><rect x="54.7068%" y="245" width="0.0512%" height="15" fill="rgb(233,210,1)" fg:x="57655" fg:w="54"/><text x="54.9568%" y="255.50"></text></g><g><title>libsystem_c.dylib`isdigit (406 samples, 0.39%)</title><rect x="54.7581%" y="245" width="0.3852%" height="15" fill="rgb(244,137,37)" fg:x="57709" fg:w="406"/><text x="55.0081%" y="255.50"></text></g><g><title>libsystem_c.dylib`isspace (35 samples, 0.03%)</title><rect x="55.1433%" y="245" width="0.0332%" height="15" fill="rgb(240,136,2)" fg:x="58115" fg:w="35"/><text x="55.3933%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (183 samples, 0.17%)</title><rect x="55.1765%" y="245" width="0.1736%" height="15" fill="rgb(239,18,37)" fg:x="58150" fg:w="183"/><text x="55.4265%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (346 samples, 0.33%)</title><rect x="55.3502%" y="245" width="0.3283%" height="15" fill="rgb(218,185,22)" fg:x="58333" fg:w="346"/><text x="55.6002%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (321 samples, 0.30%)</title><rect x="55.6785%" y="245" width="0.3046%" height="15" fill="rgb(225,218,4)" fg:x="58679" fg:w="321"/><text x="55.9285%" y="255.50"></text></g><g><title>postgres`DYLD-STUB$$__memcpy_chk (60 samples, 0.06%)</title><rect x="55.9831%" y="245" width="0.0569%" height="15" fill="rgb(230,182,32)" fg:x="59000" fg:w="60"/><text x="56.2331%" y="255.50"></text></g><g><title>postgres`DYLD-STUB$$__memset_chk (116 samples, 0.11%)</title><rect x="56.0400%" y="245" width="0.1101%" height="15" fill="rgb(242,56,43)" fg:x="59060" fg:w="116"/><text x="56.2900%" y="255.50"></text></g><g><title>postgres`DYLD-STUB$$isdigit (359 samples, 0.34%)</title><rect x="56.1501%" y="245" width="0.3406%" height="15" fill="rgb(233,99,24)" fg:x="59176" fg:w="359"/><text x="56.4001%" y="255.50"></text></g><g><title>postgres`DYLD-STUB$$strlen (65 samples, 0.06%)</title><rect x="56.4907%" y="245" width="0.0617%" height="15" fill="rgb(234,209,42)" fg:x="59535" fg:w="65"/><text x="56.7407%" y="255.50"></text></g><g><title>postgres`DatumGetCString (33 samples, 0.03%)</title><rect x="56.5524%" y="245" width="0.0313%" height="15" fill="rgb(227,7,12)" fg:x="59600" fg:w="33"/><text x="56.8024%" y="255.50"></text></g><g><title>postgres`DatumGetPointer (70 samples, 0.07%)</title><rect x="56.5837%" y="245" width="0.0664%" height="15" fill="rgb(245,203,43)" fg:x="59633" fg:w="70"/><text x="56.8337%" y="255.50"></text></g><g><title>postgres`NumericGetDatum (38 samples, 0.04%)</title><rect x="56.6501%" y="245" width="0.0361%" height="15" fill="rgb(238,205,33)" fg:x="59703" fg:w="38"/><text x="56.9001%" y="255.50"></text></g><g><title>postgres`PointerGetDatum (96 samples, 0.09%)</title><rect x="56.6862%" y="245" width="0.0911%" height="15" fill="rgb(231,56,7)" fg:x="59741" fg:w="96"/><text x="56.9362%" y="255.50"></text></g><g><title>postgres`apply_typmod (725 samples, 0.69%)</title><rect x="56.7773%" y="245" width="0.6879%" height="15" fill="rgb(244,186,29)" fg:x="59837" fg:w="725"/><text x="57.0273%" y="255.50"></text></g><g><title>postgres`round_var (556 samples, 0.53%)</title><rect x="56.9376%" y="229" width="0.5276%" height="15" fill="rgb(234,111,31)" fg:x="60006" fg:w="556"/><text x="57.1876%" y="239.50"></text></g><g><title>postgres`GetMemoryChunkMethodID (27 samples, 0.03%)</title><rect x="57.6825%" y="229" width="0.0256%" height="15" fill="rgb(241,149,10)" fg:x="60791" fg:w="27"/><text x="57.9325%" y="239.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mkostemps (62 samples, 0.06%)</title><rect x="58.3448%" y="197" width="0.0588%" height="15" fill="rgb(249,206,44)" fg:x="61489" fg:w="62"/><text x="58.5948%" y="207.50"></text></g><g><title>libsystem_c.dylib`__memset_chk (29 samples, 0.03%)</title><rect x="58.4036%" y="197" width="0.0275%" height="15" fill="rgb(251,153,30)" fg:x="61551" fg:w="29"/><text x="58.6536%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (276 samples, 0.26%)</title><rect x="58.4311%" y="197" width="0.2619%" height="15" fill="rgb(239,152,38)" fg:x="61580" fg:w="276"/><text x="58.6811%" y="207.50"></text></g><g><title>postgres`DYLD-STUB$$__memset_chk (89 samples, 0.08%)</title><rect x="58.6930%" y="197" width="0.0844%" height="15" fill="rgb(249,139,47)" fg:x="61856" fg:w="89"/><text x="58.9430%" y="207.50"></text></g><g><title>postgres`MemoryChunkGetBlock (207 samples, 0.20%)</title><rect x="58.7775%" y="197" width="0.1964%" height="15" fill="rgb(244,64,35)" fg:x="61945" fg:w="207"/><text x="59.0275%" y="207.50"></text></g><g><title>postgres`MemoryChunkGetValue (127 samples, 0.12%)</title><rect x="58.9739%" y="197" width="0.1205%" height="15" fill="rgb(216,46,15)" fg:x="62152" fg:w="127"/><text x="59.2239%" y="207.50"></text></g><g><title>postgres`MemoryChunkIsExternal (150 samples, 0.14%)</title><rect x="59.0944%" y="197" width="0.1423%" height="15" fill="rgb(250,74,19)" fg:x="62279" fg:w="150"/><text x="59.3444%" y="207.50"></text></g><g><title>postgres`AllocSetFree (1,697 samples, 1.61%)</title><rect x="57.7679%" y="213" width="1.6102%" height="15" fill="rgb(249,42,33)" fg:x="60881" fg:w="1697"/><text x="58.0179%" y="223.50"></text></g><g><title>postgres`wipe_mem (149 samples, 0.14%)</title><rect x="59.2367%" y="197" width="0.1414%" height="15" fill="rgb(242,149,17)" fg:x="62429" fg:w="149"/><text x="59.4867%" y="207.50"></text></g><g><title>postgres`GetMemoryChunkMethodID (243 samples, 0.23%)</title><rect x="59.3781%" y="213" width="0.2306%" height="15" fill="rgb(244,29,21)" fg:x="62578" fg:w="243"/><text x="59.6281%" y="223.50"></text></g><g><title>postgres`MemoryChunkGetValue (24 samples, 0.02%)</title><rect x="59.6087%" y="213" width="0.0228%" height="15" fill="rgb(220,130,37)" fg:x="62821" fg:w="24"/><text x="59.8587%" y="223.50"></text></g><g><title>postgres`MemoryChunkIsExternal (40 samples, 0.04%)</title><rect x="59.6315%" y="213" width="0.0380%" height="15" fill="rgb(211,67,2)" fg:x="62845" fg:w="40"/><text x="59.8815%" y="223.50"></text></g><g><title>postgres`sentinel_ok (96 samples, 0.09%)</title><rect x="59.6694%" y="213" width="0.0911%" height="15" fill="rgb(235,68,52)" fg:x="62885" fg:w="96"/><text x="59.9194%" y="223.50"></text></g><g><title>postgres`free_var (2,445 samples, 2.32%)</title><rect x="57.4652%" y="245" width="2.3200%" height="15" fill="rgb(246,142,3)" fg:x="60562" fg:w="2445"/><text x="57.7152%" y="255.50">p..</text></g><g><title>postgres`pfree (2,189 samples, 2.08%)</title><rect x="57.7081%" y="229" width="2.0771%" height="15" fill="rgb(241,25,7)" fg:x="60818" fg:w="2189"/><text x="57.9581%" y="239.50">p..</text></g><g><title>postgres`wipe_mem (26 samples, 0.02%)</title><rect x="59.7605%" y="213" width="0.0247%" height="15" fill="rgb(242,119,39)" fg:x="62981" fg:w="26"/><text x="60.0105%" y="223.50"></text></g><g><title>postgres`is_valid_numeric_typmod (102 samples, 0.10%)</title><rect x="59.7852%" y="245" width="0.0968%" height="15" fill="rgb(241,98,45)" fg:x="63007" fg:w="102"/><text x="60.0352%" y="255.50"></text></g><g><title>postgres`AllocSetFreeIndex (228 samples, 0.22%)</title><rect x="63.2884%" y="197" width="0.2163%" height="15" fill="rgb(254,28,30)" fg:x="66699" fg:w="228"/><text x="63.5384%" y="207.50"></text></g><g><title>postgres`pg_leftmost_one_pos32 (39 samples, 0.04%)</title><rect x="63.4677%" y="181" width="0.0370%" height="15" fill="rgb(241,142,54)" fg:x="66888" fg:w="39"/><text x="63.7177%" y="191.50"></text></g><g><title>postgres`MemoryChunkGetValue (32 samples, 0.03%)</title><rect x="63.5047%" y="197" width="0.0304%" height="15" fill="rgb(222,85,15)" fg:x="66927" fg:w="32"/><text x="63.7547%" y="207.50"></text></g><g><title>postgres`MemoryChunkSetHdrMask (378 samples, 0.36%)</title><rect x="63.5351%" y="197" width="0.3587%" height="15" fill="rgb(210,85,47)" fg:x="66959" fg:w="378"/><text x="63.7851%" y="207.50"></text></g><g><title>postgres`AllocSetAlloc (1,386 samples, 1.32%)</title><rect x="62.5881%" y="213" width="1.3151%" height="15" fill="rgb(224,206,25)" fg:x="65961" fg:w="1386"/><text x="62.8381%" y="223.50"></text></g><g><title>postgres`MemoryChunkSetHdrMask (24 samples, 0.02%)</title><rect x="63.9118%" y="213" width="0.0228%" height="15" fill="rgb(243,201,19)" fg:x="67356" fg:w="24"/><text x="64.1618%" y="223.50"></text></g><g><title>postgres`make_result_opt_error (4,333 samples, 4.11%)</title><rect x="59.8820%" y="245" width="4.1114%" height="15" fill="rgb(236,59,4)" fg:x="63109" fg:w="4333"/><text x="60.1320%" y="255.50">post..</text></g><g><title>postgres`palloc (1,933 samples, 1.83%)</title><rect x="62.1592%" y="229" width="1.8342%" height="15" fill="rgb(254,179,45)" fg:x="65509" fg:w="1933"/><text x="62.4092%" y="239.50">p..</text></g><g><title>postgres`set_sentinel (62 samples, 0.06%)</title><rect x="63.9346%" y="213" width="0.0588%" height="15" fill="rgb(226,14,10)" fg:x="67380" fg:w="62"/><text x="64.1846%" y="223.50"></text></g><g><title>postgres`numeric_typmod_precision (63 samples, 0.06%)</title><rect x="63.9934%" y="245" width="0.0598%" height="15" fill="rgb(244,27,41)" fg:x="67442" fg:w="63"/><text x="64.2434%" y="255.50"></text></g><g><title>postgres`numeric_typmod_scale (76 samples, 0.07%)</title><rect x="64.0532%" y="245" width="0.0721%" height="15" fill="rgb(235,35,32)" fg:x="67505" fg:w="76"/><text x="64.3032%" y="255.50"></text></g><g><title>postgres`palloc (16 samples, 0.02%)</title><rect x="64.1253%" y="245" width="0.0152%" height="15" fill="rgb(218,68,31)" fg:x="67581" fg:w="16"/><text x="64.3753%" y="255.50"></text></g><g><title>postgres`pfree (15 samples, 0.01%)</title><rect x="64.1405%" y="245" width="0.0142%" height="15" fill="rgb(207,120,37)" fg:x="67597" fg:w="15"/><text x="64.3905%" y="255.50"></text></g><g><title>postgres`AllocSetFreeIndex (172 samples, 0.16%)</title><rect x="68.3990%" y="181" width="0.1632%" height="15" fill="rgb(227,98,0)" fg:x="72085" fg:w="172"/><text x="68.6490%" y="191.50"></text></g><g><title>postgres`MemoryChunkGetValue (112 samples, 0.11%)</title><rect x="68.5622%" y="181" width="0.1063%" height="15" fill="rgb(207,7,3)" fg:x="72257" fg:w="112"/><text x="68.8122%" y="191.50"></text></g><g><title>postgres`AllocSetAlloc (1,317 samples, 1.25%)</title><rect x="67.5441%" y="197" width="1.2497%" height="15" fill="rgb(206,98,19)" fg:x="71184" fg:w="1317"/><text x="67.7941%" y="207.50"></text></g><g><title>postgres`MemoryChunkSetHdrMask (132 samples, 0.13%)</title><rect x="68.6685%" y="181" width="0.1253%" height="15" fill="rgb(217,5,26)" fg:x="72369" fg:w="132"/><text x="68.9185%" y="191.50"></text></g><g><title>postgres`MemoryChunkGetValue (18 samples, 0.02%)</title><rect x="68.7937%" y="197" width="0.0171%" height="15" fill="rgb(235,190,38)" fg:x="72501" fg:w="18"/><text x="69.0437%" y="207.50"></text></g><g><title>postgres`alloc_var (2,431 samples, 2.31%)</title><rect x="66.6388%" y="229" width="2.3067%" height="15" fill="rgb(247,86,24)" fg:x="70230" fg:w="2431"/><text x="66.8888%" y="239.50">p..</text></g><g><title>postgres`palloc (1,930 samples, 1.83%)</title><rect x="67.1142%" y="213" width="1.8313%" height="15" fill="rgb(205,101,16)" fg:x="70731" fg:w="1930"/><text x="67.3642%" y="223.50">p..</text></g><g><title>postgres`set_sentinel (136 samples, 0.13%)</title><rect x="68.8165%" y="197" width="0.1290%" height="15" fill="rgb(246,168,33)" fg:x="72525" fg:w="136"/><text x="69.0665%" y="207.50"></text></g><g><title>postgres`AllocSetFreeIndex (368 samples, 0.35%)</title><rect x="70.2531%" y="197" width="0.3492%" height="15" fill="rgb(231,114,1)" fg:x="74039" fg:w="368"/><text x="70.5031%" y="207.50"></text></g><g><title>postgres`pg_leftmost_one_pos32 (146 samples, 0.14%)</title><rect x="70.4637%" y="181" width="0.1385%" height="15" fill="rgb(207,184,53)" fg:x="74261" fg:w="146"/><text x="70.7137%" y="191.50"></text></g><g><title>postgres`MemoryChunkGetValue (61 samples, 0.06%)</title><rect x="70.6022%" y="197" width="0.0579%" height="15" fill="rgb(224,95,51)" fg:x="74407" fg:w="61"/><text x="70.8522%" y="207.50"></text></g><g><title>postgres`MemoryChunkSetHdrMask (230 samples, 0.22%)</title><rect x="70.6601%" y="197" width="0.2182%" height="15" fill="rgb(212,188,45)" fg:x="74468" fg:w="230"/><text x="70.9101%" y="207.50"></text></g><g><title>postgres`AllocSetAlloc (1,655 samples, 1.57%)</title><rect x="69.3232%" y="213" width="1.5704%" height="15" fill="rgb(223,154,38)" fg:x="73059" fg:w="1655"/><text x="69.5732%" y="223.50"></text></g><g><title>postgres`pg_leftmost_one_pos32 (16 samples, 0.02%)</title><rect x="70.8784%" y="197" width="0.0152%" height="15" fill="rgb(251,22,52)" fg:x="74698" fg:w="16"/><text x="71.1284%" y="207.50"></text></g><g><title>postgres`MemoryChunkGetValue (15 samples, 0.01%)</title><rect x="70.8954%" y="213" width="0.0142%" height="15" fill="rgb(229,209,22)" fg:x="74716" fg:w="15"/><text x="71.1454%" y="223.50"></text></g><g><title>postgres`MemoryChunkSetHdrMask (16 samples, 0.02%)</title><rect x="70.9097%" y="213" width="0.0152%" height="15" fill="rgb(234,138,34)" fg:x="74731" fg:w="16"/><text x="71.1597%" y="223.50"></text></g><g><title>postgres`palloc (2,203 samples, 2.09%)</title><rect x="68.9455%" y="229" width="2.0904%" height="15" fill="rgb(212,95,11)" fg:x="72661" fg:w="2203"/><text x="69.1955%" y="239.50">p..</text></g><g><title>postgres`set_sentinel (117 samples, 0.11%)</title><rect x="70.9249%" y="213" width="0.1110%" height="15" fill="rgb(240,179,47)" fg:x="74747" fg:w="117"/><text x="71.1749%" y="223.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mkostemps (69 samples, 0.07%)</title><rect x="71.6764%" y="197" width="0.0655%" height="15" fill="rgb(240,163,11)" fg:x="75539" fg:w="69"/><text x="71.9264%" y="207.50"></text></g><g><title>libsystem_c.dylib`__memset_chk (24 samples, 0.02%)</title><rect x="71.7418%" y="197" width="0.0228%" height="15" fill="rgb(236,37,12)" fg:x="75608" fg:w="24"/><text x="71.9918%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (294 samples, 0.28%)</title><rect x="71.7646%" y="197" width="0.2790%" height="15" fill="rgb(232,164,16)" fg:x="75632" fg:w="294"/><text x="72.0146%" y="207.50"></text></g><g><title>postgres`DYLD-STUB$$__memset_chk (83 samples, 0.08%)</title><rect x="72.0436%" y="197" width="0.0788%" height="15" fill="rgb(244,205,15)" fg:x="75926" fg:w="83"/><text x="72.2936%" y="207.50"></text></g><g><title>postgres`MemoryChunkGetBlock (207 samples, 0.20%)</title><rect x="72.1223%" y="197" width="0.1964%" height="15" fill="rgb(223,117,47)" fg:x="76009" fg:w="207"/><text x="72.3723%" y="207.50"></text></g><g><title>postgres`MemoryChunkGetValue (162 samples, 0.15%)</title><rect x="72.3187%" y="197" width="0.1537%" height="15" fill="rgb(244,107,35)" fg:x="76216" fg:w="162"/><text x="72.5687%" y="207.50"></text></g><g><title>postgres`MemoryChunkIsExternal (160 samples, 0.15%)</title><rect x="72.4725%" y="197" width="0.1518%" height="15" fill="rgb(205,140,8)" fg:x="76378" fg:w="160"/><text x="72.7225%" y="207.50"></text></g><g><title>postgres`AllocSetFree (1,776 samples, 1.69%)</title><rect x="71.0938%" y="213" width="1.6852%" height="15" fill="rgb(228,84,46)" fg:x="74925" fg:w="1776"/><text x="71.3438%" y="223.50"></text></g><g><title>postgres`wipe_mem (163 samples, 0.15%)</title><rect x="72.6243%" y="197" width="0.1547%" height="15" fill="rgb(254,188,9)" fg:x="76538" fg:w="163"/><text x="72.8743%" y="207.50"></text></g><g><title>postgres`GetMemoryChunkMethodID (230 samples, 0.22%)</title><rect x="72.7789%" y="213" width="0.2182%" height="15" fill="rgb(206,112,54)" fg:x="76701" fg:w="230"/><text x="73.0289%" y="223.50"></text></g><g><title>postgres`MemoryChunkGetValue (28 samples, 0.03%)</title><rect x="73.0000%" y="213" width="0.0266%" height="15" fill="rgb(216,84,49)" fg:x="76934" fg:w="28"/><text x="73.2500%" y="223.50"></text></g><g><title>postgres`MemoryChunkIsExternal (28 samples, 0.03%)</title><rect x="73.0266%" y="213" width="0.0266%" height="15" fill="rgb(214,194,35)" fg:x="76962" fg:w="28"/><text x="73.2766%" y="223.50"></text></g><g><title>postgres`sentinel_ok (129 samples, 0.12%)</title><rect x="73.0532%" y="213" width="0.1224%" height="15" fill="rgb(249,28,3)" fg:x="76990" fg:w="129"/><text x="73.3032%" y="223.50"></text></g><g><title>postgres`set_var_from_str (9,539 samples, 9.05%)</title><rect x="64.1547%" y="245" width="9.0512%" height="15" fill="rgb(222,56,52)" fg:x="67612" fg:w="9539"/><text x="64.4047%" y="255.50">postgres`set_..</text></g><g><title>postgres`pfree (2,287 samples, 2.17%)</title><rect x="71.0359%" y="229" width="2.1701%" height="15" fill="rgb(245,217,50)" fg:x="74864" fg:w="2287"/><text x="71.2859%" y="239.50">p..</text></g><g><title>postgres`wipe_mem (32 samples, 0.03%)</title><rect x="73.1756%" y="213" width="0.0304%" height="15" fill="rgb(213,201,24)" fg:x="77119" fg:w="32"/><text x="73.4256%" y="223.50"></text></g><g><title>postgres`numeric_in (21,719 samples, 20.61%)</title><rect x="53.2978%" y="261" width="20.6084%" height="15" fill="rgb(248,116,28)" fg:x="56170" fg:w="21719"/><text x="53.5478%" y="271.50">postgres`numeric_in</text></g><g><title>postgres`strip_var (738 samples, 0.70%)</title><rect x="73.2059%" y="245" width="0.7003%" height="15" fill="rgb(219,72,43)" fg:x="77151" fg:w="738"/><text x="73.4559%" y="255.50"></text></g><g><title>postgres`DatumGetPointer (23 samples, 0.02%)</title><rect x="73.9508%" y="245" width="0.0218%" height="15" fill="rgb(209,138,14)" fg:x="77936" fg:w="23"/><text x="74.2008%" y="255.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mkdtempat_np (12 samples, 0.01%)</title><rect x="74.0182%" y="229" width="0.0114%" height="15" fill="rgb(222,18,33)" fg:x="78007" fg:w="12"/><text x="74.2682%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (294 samples, 0.28%)</title><rect x="74.0381%" y="229" width="0.2790%" height="15" fill="rgb(213,199,7)" fg:x="78028" fg:w="294"/><text x="74.2881%" y="239.50"></text></g><g><title>postgres`AllocSetFreeIndex (87 samples, 0.08%)</title><rect x="74.6596%" y="181" width="0.0826%" height="15" fill="rgb(250,110,10)" fg:x="78683" fg:w="87"/><text x="74.9096%" y="191.50"></text></g><g><title>postgres`pg_leftmost_one_pos32 (34 samples, 0.03%)</title><rect x="74.7099%" y="165" width="0.0323%" height="15" fill="rgb(248,123,6)" fg:x="78736" fg:w="34"/><text x="74.9599%" y="175.50"></text></g><g><title>postgres`AllocSetAlloc (394 samples, 0.37%)</title><rect x="74.4594%" y="197" width="0.3739%" height="15" fill="rgb(206,91,31)" fg:x="78472" fg:w="394"/><text x="74.7094%" y="207.50"></text></g><g><title>postgres`MemoryChunkSetHdrMask (96 samples, 0.09%)</title><rect x="74.7421%" y="181" width="0.0911%" height="15" fill="rgb(211,154,13)" fg:x="78770" fg:w="96"/><text x="74.9921%" y="191.50"></text></g><g><title>postgres`InputFunctionCall (51,243 samples, 48.62%)</title><rect x="26.2580%" y="277" width="48.6227%" height="15" fill="rgb(225,148,7)" fg:x="27673" fg:w="51243"/><text x="26.5080%" y="287.50">postgres`InputFunctionCall</text></g><g><title>postgres`varcharin (1,013 samples, 0.96%)</title><rect x="73.9195%" y="261" width="0.9612%" height="15" fill="rgb(220,160,43)" fg:x="77903" fg:w="1013"/><text x="74.1695%" y="271.50"></text></g><g><title>postgres`varchar_input (955 samples, 0.91%)</title><rect x="73.9745%" y="245" width="0.9062%" height="15" fill="rgb(213,52,39)" fg:x="77961" fg:w="955"/><text x="74.2245%" y="255.50"></text></g><g><title>postgres`cstring_to_text_with_len (591 samples, 0.56%)</title><rect x="74.3199%" y="229" width="0.5608%" height="15" fill="rgb(243,137,7)" fg:x="78325" fg:w="591"/><text x="74.5699%" y="239.50"></text></g><g><title>postgres`palloc (563 samples, 0.53%)</title><rect x="74.3465%" y="213" width="0.5342%" height="15" fill="rgb(230,79,13)" fg:x="78353" fg:w="563"/><text x="74.5965%" y="223.50"></text></g><g><title>postgres`set_sentinel (43 samples, 0.04%)</title><rect x="74.8399%" y="197" width="0.0408%" height="15" fill="rgb(247,105,23)" fg:x="78873" fg:w="43"/><text x="75.0899%" y="207.50"></text></g><g><title>postgres`Int32GetDatum (251 samples, 0.24%)</title><rect x="74.8807%" y="277" width="0.2382%" height="15" fill="rgb(223,179,41)" fg:x="78916" fg:w="251"/><text x="75.1307%" y="287.50"></text></g><g><title>postgres`CopyReadAttributesText (7,092 samples, 6.73%)</title><rect x="75.2071%" y="261" width="6.7294%" height="15" fill="rgb(218,9,34)" fg:x="79260" fg:w="7092"/><text x="75.4571%" y="271.50">postgres`..</text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mkdtempat_np (20 samples, 0.02%)</title><rect x="90.7372%" y="229" width="0.0190%" height="15" fill="rgb(222,106,8)" fg:x="95627" fg:w="20"/><text x="90.9872%" y="239.50"></text></g><g><title>libsystem_c.dylib`__memcpy_chk (12 samples, 0.01%)</title><rect x="90.7562%" y="229" width="0.0114%" height="15" fill="rgb(211,220,0)" fg:x="95647" fg:w="12"/><text x="91.0062%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (94 samples, 0.09%)</title><rect x="90.7675%" y="229" width="0.0892%" height="15" fill="rgb(229,52,16)" fg:x="95659" fg:w="94"/><text x="91.0175%" y="239.50"></text></g><g><title>postgres`is_valid_ascii (1,019 samples, 0.97%)</title><rect x="91.2875%" y="165" width="0.9669%" height="15" fill="rgb(212,155,18)" fg:x="96207" fg:w="1019"/><text x="91.5375%" y="175.50"></text></g><g><title>postgres`vector8_broadcast (2,215 samples, 2.10%)</title><rect x="92.2544%" y="165" width="2.1017%" height="15" fill="rgb(242,21,14)" fg:x="97226" fg:w="2215"/><text x="92.5044%" y="175.50">p..</text></g><g><title>postgres`vector8_eq (502 samples, 0.48%)</title><rect x="94.3561%" y="165" width="0.4763%" height="15" fill="rgb(222,19,48)" fg:x="99441" fg:w="502"/><text x="94.6061%" y="175.50"></text></g><g><title>postgres`vector8_is_highbit_set (447 samples, 0.42%)</title><rect x="94.8325%" y="165" width="0.4241%" height="15" fill="rgb(232,45,27)" fg:x="99943" fg:w="447"/><text x="95.0825%" y="175.50"></text></g><g><title>postgres`vector8_load (1,045 samples, 0.99%)</title><rect x="95.2566%" y="165" width="0.9916%" height="15" fill="rgb(249,103,42)" fg:x="100390" fg:w="1045"/><text x="95.5066%" y="175.50"></text></g><g><title>postgres`CopyConvertBuf (6,987 samples, 6.63%)</title><rect x="90.8624%" y="213" width="6.6297%" height="15" fill="rgb(246,81,33)" fg:x="95759" fg:w="6987"/><text x="91.1124%" y="223.50">postgres`..</text></g><g><title>postgres`pg_encoding_verifymbstr (6,986 samples, 6.63%)</title><rect x="90.8634%" y="197" width="6.6288%" height="15" fill="rgb(252,33,42)" fg:x="95760" fg:w="6986"/><text x="91.1134%" y="207.50">postgres`..</text></g><g><title>postgres`pg_utf8_verifystr (6,984 samples, 6.63%)</title><rect x="90.8653%" y="181" width="6.6269%" height="15" fill="rgb(209,212,41)" fg:x="95762" fg:w="6984"/><text x="91.1153%" y="191.50">postgres`..</text></g><g><title>postgres`vector8_or (1,311 samples, 1.24%)</title><rect x="96.2482%" y="165" width="1.2440%" height="15" fill="rgb(207,154,6)" fg:x="101435" fg:w="1311"/><text x="96.4982%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (69 samples, 0.07%)</title><rect x="97.5168%" y="181" width="0.0655%" height="15" fill="rgb(223,64,47)" fg:x="102772" fg:w="69"/><text x="97.7668%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (60 samples, 0.06%)</title><rect x="97.6108%" y="165" width="0.0569%" height="15" fill="rgb(211,161,38)" fg:x="102871" fg:w="60"/><text x="97.8608%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (599 samples, 0.57%)</title><rect x="97.6981%" y="117" width="0.5684%" height="15" fill="rgb(219,138,40)" fg:x="102963" fg:w="599"/><text x="97.9481%" y="127.50"></text></g><g><title>postgres`pq_getbytes (629 samples, 0.60%)</title><rect x="97.6705%" y="165" width="0.5968%" height="15" fill="rgb(241,228,46)" fg:x="102934" fg:w="629"/><text x="97.9205%" y="175.50"></text></g><g><title>postgres`pq_recvbuf (604 samples, 0.57%)</title><rect x="97.6943%" y="149" width="0.5731%" height="15" fill="rgb(223,209,38)" fg:x="102959" fg:w="604"/><text x="97.9443%" y="159.50"></text></g><g><title>postgres`secure_read (602 samples, 0.57%)</title><rect x="97.6962%" y="133" width="0.5712%" height="15" fill="rgb(236,164,45)" fg:x="102961" fg:w="602"/><text x="97.9462%" y="143.50"></text></g><g><title>postgres`pq_getmessage (707 samples, 0.67%)</title><rect x="97.5975%" y="181" width="0.6708%" height="15" fill="rgb(231,15,5)" fg:x="102857" fg:w="707"/><text x="97.8475%" y="191.50"></text></g><g><title>postgres`CopyGetData (809 samples, 0.77%)</title><rect x="97.5016%" y="197" width="0.7676%" height="15" fill="rgb(252,35,15)" fg:x="102756" fg:w="809"/><text x="97.7516%" y="207.50"></text></g><g><title>postgres`pgstat_progress_update_param (13 samples, 0.01%)</title><rect x="98.2693%" y="197" width="0.0123%" height="15" fill="rgb(248,181,18)" fg:x="103565" fg:w="13"/><text x="98.5193%" y="207.50"></text></g><g><title>postgres`CopyLoadRawBuf (836 samples, 0.79%)</title><rect x="97.4921%" y="213" width="0.7933%" height="15" fill="rgb(233,39,42)" fg:x="102746" fg:w="836"/><text x="97.7421%" y="223.50"></text></g><g><title>postgres`CopyLoadInputBuf (7,829 samples, 7.43%)</title><rect x="90.8577%" y="229" width="7.4287%" height="15" fill="rgb(238,110,33)" fg:x="95754" fg:w="7829"/><text x="91.1077%" y="239.50">postgres`C..</text></g><g><title>postgres`appendBinaryStringInfo (121 samples, 0.11%)</title><rect x="98.2968%" y="229" width="0.1148%" height="15" fill="rgb(233,195,10)" fg:x="103594" fg:w="121"/><text x="98.5468%" y="239.50"></text></g><g><title>postgres`enlargeStringInfo (50 samples, 0.05%)</title><rect x="98.3642%" y="213" width="0.0474%" height="15" fill="rgb(254,105,3)" fg:x="103665" fg:w="50"/><text x="98.6142%" y="223.50"></text></g><g><title>postgres`CopyReadLineText (17,273 samples, 16.39%)</title><rect x="82.0304%" y="245" width="16.3898%" height="15" fill="rgb(221,225,9)" fg:x="86451" fg:w="17273"/><text x="82.2804%" y="255.50">postgres`CopyReadLineText</text></g><g><title>postgres`CopyReadLine (17,373 samples, 16.48%)</title><rect x="81.9364%" y="261" width="16.4846%" height="15" fill="rgb(224,227,45)" fg:x="86352" fg:w="17373"/><text x="82.1864%" y="271.50">postgres`CopyReadLine</text></g><g><title>postgres`list_length (362 samples, 0.34%)</title><rect x="98.4211%" y="261" width="0.3435%" height="15" fill="rgb(229,198,43)" fg:x="103725" fg:w="362"/><text x="98.6711%" y="271.50"></text></g><g><title>postgres`NextCopyFromRawFields (24,970 samples, 23.69%)</title><rect x="75.1188%" y="277" width="23.6932%" height="15" fill="rgb(206,209,35)" fg:x="79167" fg:w="24970"/><text x="75.3688%" y="287.50">postgres`NextCopyFromRawFields</text></g><g><title>postgres`resetStringInfo (50 samples, 0.05%)</title><rect x="98.7646%" y="261" width="0.0474%" height="15" fill="rgb(245,195,53)" fg:x="104087" fg:w="50"/><text x="99.0146%" y="271.50"></text></g><g><title>postgres`ObjectIdGetDatum (265 samples, 0.25%)</title><rect x="98.8120%" y="277" width="0.2514%" height="15" fill="rgb(240,92,26)" fg:x="104137" fg:w="265"/><text x="99.0620%" y="287.50"></text></g><g><title>postgres`bpcharin (659 samples, 0.63%)</title><rect x="99.0635%" y="277" width="0.6253%" height="15" fill="rgb(207,40,23)" fg:x="104402" fg:w="659"/><text x="99.3135%" y="287.50"></text></g><g><title>postgres`date_in (48 samples, 0.05%)</title><rect x="99.6888%" y="277" width="0.0455%" height="15" fill="rgb(223,111,35)" fg:x="105061" fg:w="48"/><text x="99.9388%" y="287.50"></text></g><g><title>postgres`int4in (28 samples, 0.03%)</title><rect x="99.7343%" y="277" width="0.0266%" height="15" fill="rgb(229,147,28)" fg:x="105109" fg:w="28"/><text x="99.9843%" y="287.50"></text></g><g><title>postgres`numeric_in (23 samples, 0.02%)</title><rect x="99.7609%" y="277" width="0.0218%" height="15" fill="rgb(211,29,28)" fg:x="105137" fg:w="23"/><text x="100.0109%" y="287.50"></text></g><g><title>postgres`NextCopyFrom (80,370 samples, 76.26%)</title><rect x="23.5347%" y="293" width="76.2603%" height="15" fill="rgb(228,72,33)" fg:x="24803" fg:w="80370"/><text x="23.7847%" y="303.50">postgres`NextCopyFrom</text></g><g><title>postgres`varcharin (13 samples, 0.01%)</title><rect x="99.7827%" y="277" width="0.0123%" height="15" fill="rgb(205,214,31)" fg:x="105160" fg:w="13"/><text x="100.0327%" y="287.50"></text></g><g><title>postgres`list_length (58 samples, 0.06%)</title><rect x="99.7960%" y="293" width="0.0550%" height="15" fill="rgb(224,111,15)" fg:x="105174" fg:w="58"/><text x="100.0460%" y="303.50"></text></g><g><title>postgres`CopyFrom (105,240 samples, 99.86%)</title><rect x="0.0000%" y="309" width="99.8586%" height="15" fill="rgb(253,21,26)" fg:x="0" fg:w="105240"/><text x="0.2500%" y="319.50">postgres`CopyFrom</text></g><g><title>postgres`CopyMultiInsertInfoIsFull (40 samples, 0.04%)</title><rect x="99.8586%" y="309" width="0.0380%" height="15" fill="rgb(245,139,43)" fg:x="105240" fg:w="40"/><text x="100.1086%" y="319.50"></text></g><g><title>postgres`CopyMultiInsertInfoNextFreeSlot (14 samples, 0.01%)</title><rect x="99.8966%" y="309" width="0.0133%" height="15" fill="rgb(252,170,7)" fg:x="105280" fg:w="14"/><text x="100.1466%" y="319.50"></text></g><g><title>postgres`ExecConstraints (25 samples, 0.02%)</title><rect x="99.9146%" y="309" width="0.0237%" height="15" fill="rgb(231,118,14)" fg:x="105299" fg:w="25"/><text x="100.1646%" y="319.50"></text></g><g><title>postgres`MemoryContextSwitchTo (38 samples, 0.04%)</title><rect x="99.9431%" y="309" width="0.0361%" height="15" fill="rgb(238,83,0)" fg:x="105329" fg:w="38"/><text x="100.1931%" y="319.50"></text></g><g><title>all (105,389 samples, 100%)</title><rect x="0.0000%" y="565" width="100.0000%" height="15" fill="rgb(221,39,39)" fg:x="0" fg:w="105389"/><text x="0.2500%" y="575.50"></text></g><g><title>dyld`start (105,389 samples, 100.00%)</title><rect x="0.0000%" y="549" width="100.0000%" height="15" fill="rgb(222,119,46)" fg:x="0" fg:w="105389"/><text x="0.2500%" y="559.50">dyld`start</text></g><g><title>postgres`main (105,389 samples, 100.00%)</title><rect x="0.0000%" y="533" width="100.0000%" height="15" fill="rgb(222,165,49)" fg:x="0" fg:w="105389"/><text x="0.2500%" y="543.50">postgres`main</text></g><g><title>postgres`PostmasterMain (105,389 samples, 100.00%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(219,113,52)" fg:x="0" fg:w="105389"/><text x="0.2500%" y="527.50">postgres`PostmasterMain</text></g><g><title>postgres`ServerLoop (105,389 samples, 100.00%)</title><rect x="0.0000%" y="501" width="100.0000%" height="15" fill="rgb(214,7,15)" fg:x="0" fg:w="105389"/><text x="0.2500%" y="511.50">postgres`ServerLoop</text></g><g><title>postgres`BackendStartup (105,389 samples, 100.00%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(235,32,4)" fg:x="0" fg:w="105389"/><text x="0.2500%" y="495.50">postgres`BackendStartup</text></g><g><title>postgres`report_fork_failure_to_client (105,389 samples, 100.00%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(238,90,54)" fg:x="0" fg:w="105389"/><text x="0.2500%" y="479.50">postgres`report_fork_failure_to_client</text></g><g><title>postgres`PostgresMain (105,389 samples, 100.00%)</title><rect x="0.0000%" y="453" width="100.0000%" height="15" fill="rgb(213,208,19)" fg:x="0" fg:w="105389"/><text x="0.2500%" y="463.50">postgres`PostgresMain</text></g><g><title>postgres`exec_simple_query (105,389 samples, 100.00%)</title><rect x="0.0000%" y="437" width="100.0000%" height="15" fill="rgb(233,156,4)" fg:x="0" fg:w="105389"/><text x="0.2500%" y="447.50">postgres`exec_simple_query</text></g><g><title>postgres`PortalRun (105,389 samples, 100.00%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(207,194,5)" fg:x="0" fg:w="105389"/><text x="0.2500%" y="431.50">postgres`PortalRun</text></g><g><title>postgres`PortalRunMulti (105,389 samples, 100.00%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(206,111,30)" fg:x="0" fg:w="105389"/><text x="0.2500%" y="415.50">postgres`PortalRunMulti</text></g><g><title>postgres`PortalRunUtility (105,389 samples, 100.00%)</title><rect x="0.0000%" y="389" width="100.0000%" height="15" fill="rgb(243,70,54)" fg:x="0" fg:w="105389"/><text x="0.2500%" y="399.50">postgres`PortalRunUtility</text></g><g><title>postgres`ProcessUtility (105,389 samples, 100.00%)</title><rect x="0.0000%" y="373" width="100.0000%" height="15" fill="rgb(242,28,8)" fg:x="0" fg:w="105389"/><text x="0.2500%" y="383.50">postgres`ProcessUtility</text></g><g><title>neon.dylib`NeonProcessUtility (105,389 samples, 100.00%)</title><rect x="0.0000%" y="357" width="100.0000%" height="15" fill="rgb(219,106,18)" fg:x="0" fg:w="105389"/><text x="0.2500%" y="367.50">neon.dylib`NeonProcessUtility</text></g><g><title>postgres`standard_ProcessUtility (105,389 samples, 100.00%)</title><rect x="0.0000%" y="341" width="100.0000%" height="15" fill="rgb(244,222,10)" fg:x="0" fg:w="105389"/><text x="0.2500%" y="351.50">postgres`standard_ProcessUtility</text></g><g><title>postgres`DoCopy (105,389 samples, 100.00%)</title><rect x="0.0000%" y="325" width="100.0000%" height="15" fill="rgb(236,179,52)" fg:x="0" fg:w="105389"/><text x="0.2500%" y="335.50">postgres`DoCopy</text></g><g><title>postgres`NextCopyFrom (22 samples, 0.02%)</title><rect x="99.9791%" y="309" width="0.0209%" height="15" fill="rgb(213,23,39)" fg:x="105367" fg:w="22"/><text x="100.2291%" y="319.50"></text></g></svg></svg>